"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNetworkObj = exports.getNetwork = exports.setNetwork = exports.GlobalCoinFactory = exports.Environments = exports.Buffer = exports.sjcl = exports.bitcoin = exports.Errors = void 0;
/**
 * @prettier
 */
//
// index.js - Module definition for BitGoJS
//
// Copyright 2022, BitGo, Inc.  All Rights Reserved.
//
const _ = require("lodash");
const sdk_core_1 = require("@bitgo/sdk-core");
__exportStar(require("@bitgo/sdk-api"), exports);
const utxolib = require("@bitgo/utxo-lib");
__exportStar(require("./bitgo"), exports);
exports.Errors = require("./errors");
// Expose legacy "bitcoin" API (mostly HDNode)
/** @deprecated */
exports.bitcoin = require("./legacyBitcoin");
/** @deprecated */
exports.sjcl = require('@bitgo/sjcl');
var buffer_1 = require("buffer");
Object.defineProperty(exports, "Buffer", { enumerable: true, get: function () { return buffer_1.Buffer; } });
exports.Environments = _.cloneDeep(sdk_core_1.common.Environments);
var coinFactory_1 = require("./v2/coinFactory");
Object.defineProperty(exports, "GlobalCoinFactory", { enumerable: true, get: function () { return coinFactory_1.GlobalCoinFactory; } });
__exportStar(require("./v2"), exports);
/**
 * Set the network, i.e. either "bitcoin" for production with real bitcoin, or
 * "testnet" for development with testnet bitcoin.
 *
 * @deprecated
 */
function setNetwork(network) {
    sdk_core_1.common.setNetwork(network);
}
exports.setNetwork = setNetwork;
/**
 * Get the network. Returns either "bitcoin" or "testnet".
 *
 * @deprecated
 */
function getNetwork() {
    return sdk_core_1.common.getNetwork();
}
exports.getNetwork = getNetwork;
/**
 * @deprecated
 */
function getNetworkObj() {
    return utxolib.networks[sdk_core_1.common.getNetwork()];
}
exports.getNetworkObj = getNetworkObj;
setNetwork('testnet');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztHQUVHO0FBQ0gsRUFBRTtBQUNGLDJDQUEyQztBQUMzQyxFQUFFO0FBQ0Ysb0RBQW9EO0FBQ3BELEVBQUU7QUFDRiw0QkFBNEI7QUFDNUIsOENBQXlDO0FBQ3pDLGlEQUErQjtBQUMvQiwyQ0FBMkM7QUFFM0MsMENBQXdCO0FBRXhCLHFDQUFtQztBQUVuQyw4Q0FBOEM7QUFDOUMsa0JBQWtCO0FBQ2xCLDZDQUEyQztBQUMzQyxrQkFBa0I7QUFDTCxRQUFBLElBQUksR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFFM0MsaUNBQWdDO0FBQXZCLGdHQUFBLE1BQU0sT0FBQTtBQUVGLFFBQUEsWUFBWSxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUMsaUJBQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUM3RCxnREFBc0U7QUFBN0QsZ0hBQUEsaUJBQWlCLE9BQUE7QUFFMUIsdUNBQXFCO0FBRXJCOzs7OztHQUtHO0FBQ0gsU0FBZ0IsVUFBVSxDQUFDLE9BQU87SUFDaEMsaUJBQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDN0IsQ0FBQztBQUZELGdDQUVDO0FBRUQ7Ozs7R0FJRztBQUNILFNBQWdCLFVBQVU7SUFDeEIsT0FBTyxpQkFBTSxDQUFDLFVBQVUsRUFBRSxDQUFDO0FBQzdCLENBQUM7QUFGRCxnQ0FFQztBQUVEOztHQUVHO0FBQ0gsU0FBZ0IsYUFBYTtJQUMzQixPQUFPLE9BQU8sQ0FBQyxRQUFRLENBQUMsaUJBQU0sQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFGRCxzQ0FFQztBQUVELFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHByZXR0aWVyXG4gKi9cbi8vXG4vLyBpbmRleC5qcyAtIE1vZHVsZSBkZWZpbml0aW9uIGZvciBCaXRHb0pTXG4vL1xuLy8gQ29weXJpZ2h0IDIwMjIsIEJpdEdvLCBJbmMuICBBbGwgUmlnaHRzIFJlc2VydmVkLlxuLy9cbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IGNvbW1vbiB9IGZyb20gJ0BiaXRnby9zZGstY29yZSc7XG5leHBvcnQgKiBmcm9tICdAYml0Z28vc2RrLWFwaSc7XG5pbXBvcnQgKiBhcyB1dHhvbGliIGZyb20gJ0BiaXRnby91dHhvLWxpYic7XG5cbmV4cG9ydCAqIGZyb20gJy4vYml0Z28nO1xuXG5leHBvcnQgKiBhcyBFcnJvcnMgZnJvbSAnLi9lcnJvcnMnO1xuXG4vLyBFeHBvc2UgbGVnYWN5IFwiYml0Y29pblwiIEFQSSAobW9zdGx5IEhETm9kZSlcbi8qKiBAZGVwcmVjYXRlZCAqL1xuZXhwb3J0ICogYXMgYml0Y29pbiBmcm9tICcuL2xlZ2FjeUJpdGNvaW4nO1xuLyoqIEBkZXByZWNhdGVkICovXG5leHBvcnQgY29uc3Qgc2pjbCA9IHJlcXVpcmUoJ0BiaXRnby9zamNsJyk7XG5cbmV4cG9ydCB7IEJ1ZmZlciB9IGZyb20gJ2J1ZmZlcic7XG5cbmV4cG9ydCBjb25zdCBFbnZpcm9ubWVudHMgPSBfLmNsb25lRGVlcChjb21tb24uRW52aXJvbm1lbnRzKTtcbmV4cG9ydCB7IEdsb2JhbENvaW5GYWN0b3J5LCBDb2luQ29uc3RydWN0b3IgfSBmcm9tICcuL3YyL2NvaW5GYWN0b3J5JztcbmV4cG9ydCB7IEVudmlyb25tZW50TmFtZSwgVjFOZXR3b3JrIH0gZnJvbSAnQGJpdGdvL3Nkay1jb3JlJztcbmV4cG9ydCAqIGZyb20gJy4vdjInO1xuXG4vKipcbiAqIFNldCB0aGUgbmV0d29yaywgaS5lLiBlaXRoZXIgXCJiaXRjb2luXCIgZm9yIHByb2R1Y3Rpb24gd2l0aCByZWFsIGJpdGNvaW4sIG9yXG4gKiBcInRlc3RuZXRcIiBmb3IgZGV2ZWxvcG1lbnQgd2l0aCB0ZXN0bmV0IGJpdGNvaW4uXG4gKlxuICogQGRlcHJlY2F0ZWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldE5ldHdvcmsobmV0d29yaykge1xuICBjb21tb24uc2V0TmV0d29yayhuZXR3b3JrKTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIG5ldHdvcmsuIFJldHVybnMgZWl0aGVyIFwiYml0Y29pblwiIG9yIFwidGVzdG5ldFwiLlxuICpcbiAqIEBkZXByZWNhdGVkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXROZXR3b3JrKCkge1xuICByZXR1cm4gY29tbW9uLmdldE5ldHdvcmsoKTtcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TmV0d29ya09iaigpIHtcbiAgcmV0dXJuIHV0eG9saWIubmV0d29ya3NbY29tbW9uLmdldE5ldHdvcmsoKV07XG59XG5cbnNldE5ldHdvcmsoJ3Rlc3RuZXQnKTtcbiJdfQ==