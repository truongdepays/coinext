/// <reference types="node" />
import { AbstractUtxoCoin, UtxoNetwork } from './abstractUtxoCoin';
import { BaseCoin } from '../baseCoin';
import { BitGo } from '../../bitgo';
export declare class Ltc extends AbstractUtxoCoin {
    constructor(bitgo: BitGo, network?: UtxoNetwork);
    static createInstance(bitgo: BitGo): BaseCoin;
    getChain(): string;
    getFamily(): string;
    getFullName(): string;
    supportsBlockTarget(): boolean;
    /**
     * Canonicalize a Litecoin address for a specific scriptHash version
     * @param address
     * @param scriptHashVersion 1 or 2, where 1 is the old version and 2 is the new version
     * @returns {*} address string
     */
    canonicalAddress(address: string, scriptHashVersion?: number): string;
    calculateRecoveryAddress(scriptHashScript: Buffer): string;
}
//# sourceMappingURL=ltc.d.ts.map