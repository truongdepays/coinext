/**
 * @prettier
 */
import * as superagent from 'superagent';
import { BitGoJsError } from '@bitgo/sdk-core';
export declare class ApiNotImplementedError extends BitGoJsError {
    constructor(coinName: string);
}
export declare class ApiRequestError extends BitGoJsError {
    constructor(url: string, reason: Error | string);
    static forRequest(req: superagent.Request, reason: Error | string): ApiRequestError;
    static forResponse(res: superagent.Response, reason: Error | string): ApiRequestError;
}
export declare type RequestOptions = {
    retry?: number;
};
export declare type Response<T> = {
    map<V>(f: (body: T) => V): V;
};
export declare class BaseApi {
    baseUrl: string;
    constructor(baseUrl: string);
    request<T>(method: string, path: string, requestBody: unknown | undefined, params?: RequestOptions): Promise<Response<T>>;
    get<T>(path: string, params?: RequestOptions): Promise<Response<T>>;
    post<T>(path: string, body: unknown, params?: RequestOptions): Promise<Response<T>>;
}
//# sourceMappingURL=baseApi.d.ts.map