/**
 * @prettier
 */
import { BaseCoin as StaticsBaseCoin } from '@bitgo/statics';
import { BitGo } from '../bitgo';
import { BaseCoin } from './baseCoin';
export declare type CoinConstructor = (bitgo: BitGo, staticsCoin?: Readonly<StaticsBaseCoin>) => BaseCoin;
export declare class CoinFactory {
    private coinConstructors;
    /**
     *
     * @param bitgo
     * @param name
     * @throws CoinNotDefinedError
     * @throws UnsupportedCoinError
     */
    getInstance(bitgo: BitGo, name: string): BaseCoin;
    registerCoinConstructor(name: string, constructor: CoinConstructor): void;
}
export declare const GlobalCoinFactory: CoinFactory;
//# sourceMappingURL=coinFactory.d.ts.map