import { CoinFamily } from '@bitgo/statics';
/**
 * This classes intention is to guess/verify what seeds come from where.
 */
export declare class SeedValidator {
    /**
     * Try to guess what kind of seed this could be
     * @param seed
     * @returns {string} - returns undefined if the coin type is undetectable. returns
     * the coin family otherwise.
     */
    static getCoinFamilyFromSeed(seed: string): CoinFamily | undefined;
    /**
     * Checks whether this is a valid seed for this coin family type.
     * @param seed - seed
     * @param coinFamily - the coinFamily of the coin we're working with
     */
    static isValidEd25519SeedForCoin(seed: string, coinFamily: CoinFamily): boolean;
    /**
     * We need to ensure there is no overlap for any two seeds we put into this function. This functions
     * intention is for gating whether this seed could possibly match two formats or is invalid itself.
     * @param seed
     */
    static hasCompetingSeedFormats(seed: string): boolean;
    /**
     * Checks if this is a valid Hbar prv. These can be encoded differently.
     * @param seed
     */
    static isValidHbarSeedFormat(seed: string): boolean;
}
//# sourceMappingURL=seedValidator.d.ts.map