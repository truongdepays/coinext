/// <reference types="node" />
interface Curve {
    scalarRandom(): bigint;
    scalarReduce(s: bigint): bigint;
    scalarNegate(s: bigint): bigint;
    scalarInvert(s: bigint): bigint;
    scalarAdd(x: bigint, y: bigint): bigint;
    scalarSub(x: bigint, y: bigint): bigint;
    scalarMult(x: bigint, y: bigint): bigint;
    basePointMult(n: bigint): bigint;
    pointAdd(p: bigint, q: bigint): bigint;
    verify(y: bigint, signedMessage: Buffer): Buffer;
}
export default Curve;
export declare class Ed25519Curve {
    static initialized: boolean;
    static initialize(): Promise<void>;
    scalarRandom(): bigint;
    scalarReduce(s: bigint): bigint;
    scalarNegate(s: bigint): bigint;
    scalarInvert(s: bigint): bigint;
    scalarAdd(x: bigint, y: bigint): bigint;
    scalarSub(x: bigint, y: bigint): bigint;
    scalarMult(x: bigint, y: bigint): bigint;
    basePointMult(n: bigint): bigint;
    pointAdd(p: bigint, q: bigint): bigint;
    verify(y: bigint, signedMessage: Buffer): Buffer;
}
//# sourceMappingURL=curves.d.ts.map