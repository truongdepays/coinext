import { DefaultKeys, KeyPairOptions } from '../baseCoin/iface';
import { Secp256k1ExtendedKeyPair } from '../baseCoin/secp256k1ExtendedKeyPair';
/**
 * Avalanche keys and address management for the C-Chain.
 */
export declare class KeyPair extends Secp256k1ExtendedKeyPair {
    /**
     * Public constructor. By default, creates a key pair with a random master seed.
     *
     * @param { KeyPairOptions } source Either a master seed, a private key (extended or raw), or a public key
     *     (extended, compressed, or uncompressed)
     */
    constructor(source?: KeyPairOptions);
    /**
     * Avalanche C-Chain default keys format is the same as ethereum: raw private and uncompressed public key
     *
     * @returns { DefaultKeys } The keys in the protocol default key format
     */
    getKeys(): DefaultKeys;
    /**
     * Get an Avalanche C-Chain public address in ethereum format
     *
     * @returns {string} The address derived from the public key
     */
    getAddress(): string;
}
//# sourceMappingURL=keyPair.d.ts.map