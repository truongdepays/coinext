"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferBuilder = void 0;
var eth_1 = require("../eth");
/** AVAXC transfer builder */
var TransferBuilder = /** @class */ (function (_super) {
    __extends(TransferBuilder, _super);
    function TransferBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Get the prefix used in generating an operation hash for sending tokens
     *
     * @returns the string prefix
     */
    TransferBuilder.prototype.getTokenOperationHashPrefix = function () {
        return 'AVAX-ERC20';
    };
    /**
     * Get the prefix used in generating an operation hash for sending native coins
     *
     * @returns the string prefix
     */
    TransferBuilder.prototype.getNativeOperationHashPrefix = function () {
        return 'AVAX';
    };
    return TransferBuilder;
}(eth_1.TransferBuilder));
exports.TransferBuilder = TransferBuilder;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmZXJCdWlsZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvaW4vYXZheGMvdHJhbnNmZXJCdWlsZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDhCQUErRDtBQUUvRCw2QkFBNkI7QUFDN0I7SUFBcUMsbUNBQWtCO0lBQXZEOztJQWtCQSxDQUFDO0lBakJDOzs7O09BSUc7SUFDTyxxREFBMkIsR0FBckM7UUFDRSxPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNPLHNEQUE0QixHQUF0QztRQUNFLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFDSCxzQkFBQztBQUFELENBQUMsQUFsQkQsQ0FBcUMscUJBQWtCLEdBa0J0RDtBQWxCWSwwQ0FBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zZmVyQnVpbGRlciBhcyBFdGhUcmFuc2ZlckJ1aWxkZXIgfSBmcm9tICcuLi9ldGgnO1xuXG4vKiogQVZBWEMgdHJhbnNmZXIgYnVpbGRlciAqL1xuZXhwb3J0IGNsYXNzIFRyYW5zZmVyQnVpbGRlciBleHRlbmRzIEV0aFRyYW5zZmVyQnVpbGRlciB7XG4gIC8qKlxuICAgKiBHZXQgdGhlIHByZWZpeCB1c2VkIGluIGdlbmVyYXRpbmcgYW4gb3BlcmF0aW9uIGhhc2ggZm9yIHNlbmRpbmcgdG9rZW5zXG4gICAqXG4gICAqIEByZXR1cm5zIHRoZSBzdHJpbmcgcHJlZml4XG4gICAqL1xuICBwcm90ZWN0ZWQgZ2V0VG9rZW5PcGVyYXRpb25IYXNoUHJlZml4KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICdBVkFYLUVSQzIwJztcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIHByZWZpeCB1c2VkIGluIGdlbmVyYXRpbmcgYW4gb3BlcmF0aW9uIGhhc2ggZm9yIHNlbmRpbmcgbmF0aXZlIGNvaW5zXG4gICAqXG4gICAqIEByZXR1cm5zIHRoZSBzdHJpbmcgcHJlZml4XG4gICAqL1xuICBwcm90ZWN0ZWQgZ2V0TmF0aXZlT3BlcmF0aW9uSGFzaFByZWZpeCgpOiBzdHJpbmcge1xuICAgIHJldHVybiAnQVZBWCc7XG4gIH1cbn1cbiJdfQ==