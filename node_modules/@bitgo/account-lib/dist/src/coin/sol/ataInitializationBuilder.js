"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AtaInitializationBuilder = void 0;
var transactionBuilder_1 = require("./transactionBuilder");
var baseCoin_1 = require("../baseCoin");
var constants_1 = require("./constants");
var utils_1 = require("./utils");
var errors_1 = require("../baseCoin/errors");
var assert_1 = __importDefault(require("assert"));
var ataInitializationTransaction_1 = require("./ataInitializationTransaction");
var AtaInitializationBuilder = /** @class */ (function (_super) {
    __extends(AtaInitializationBuilder, _super);
    function AtaInitializationBuilder(_coinConfig) {
        var _this = _super.call(this, _coinConfig) || this;
        _this._transaction = new ataInitializationTransaction_1.AtaInitializationTransaction(_coinConfig);
        return _this;
    }
    Object.defineProperty(AtaInitializationBuilder.prototype, "transactionType", {
        get: function () {
            return baseCoin_1.TransactionType.AssociatedTokenAccountInitialization;
        },
        enumerable: false,
        configurable: true
    });
    /** @inheritDoc */
    AtaInitializationBuilder.prototype.initBuilder = function (tx) {
        _super.prototype.initBuilder.call(this, tx);
        for (var _i = 0, _a = this._instructionsData; _i < _a.length; _i++) {
            var instruction = _a[_i];
            if (instruction.type === constants_1.InstructionBuilderTypes.CreateAssociatedTokenAccount) {
                var ataInitInstruction = instruction;
                this._mint = ataInitInstruction.params.mintAddress;
                this.validateMintOrThrow();
                this.sender(ataInitInstruction.params.ownerAddress);
            }
        }
    };
    /**
     * Sets the mint address of the associated token account
     *
     * @param mint mint name of associated token account
     */
    AtaInitializationBuilder.prototype.mint = function (mint) {
        var token = utils_1.getSolTokenFromTokenName(mint);
        if (!token) {
            throw new errors_1.BuildTransactionError('Invalid transaction: invalid mint, got: ' + mint);
        }
        this._mint = token.tokenAddress;
        return this;
    };
    AtaInitializationBuilder.prototype.validateMintOrThrow = function () {
        if (!this._mint || !utils_1.isValidPublicKey(this._mint)) {
            throw new errors_1.BuildTransactionError('Invalid transaction: invalid or missing mint, got: ' + this._mint);
        }
    };
    /**
     * Used to set the minimum rent exempt amount
     *
     * @param rentExemptAmount minimum rent exempt amount in lamports
     */
    AtaInitializationBuilder.prototype.rentExemptAmount = function (rentExemptAmount) {
        this._rentExemptAmount = rentExemptAmount;
        this.validateRentExemptAmountOrThrow();
        return this;
    };
    AtaInitializationBuilder.prototype.validateRentExemptAmountOrThrow = function () {
        // _rentExemptAmount is allowed to be undefined or a valid amount if it's defined
        if (this._rentExemptAmount && !utils_1.isValidAmount(this._rentExemptAmount)) {
            throw new errors_1.BuildTransactionError('Invalid transaction: invalid rentExemptAmount, got: ' + this._rentExemptAmount);
        }
    };
    /** @inheritdoc */
    AtaInitializationBuilder.prototype.validateTransaction = function (transaction) {
        _super.prototype.validateTransaction.call(this, transaction);
        this.validateMintOrThrow();
        this.validateRentExemptAmountOrThrow();
    };
    /** @inheritdoc */
    AtaInitializationBuilder.prototype.buildImplementation = function () {
        return __awaiter(this, void 0, void 0, function () {
            var ataPk, ataInitData;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        assert_1.default(this._sender, 'Sender must be set before building the transaction');
                        assert_1.default(this._mint, 'Mint must be set before building the transaction');
                        return [4 /*yield*/, utils_1.getAssociatedTokenAccountAddress(this._mint, this._sender)];
                    case 1:
                        ataPk = _a.sent();
                        ataInitData = {
                            type: constants_1.InstructionBuilderTypes.CreateAssociatedTokenAccount,
                            params: {
                                mintAddress: this._mint,
                                ataAddress: ataPk,
                                ownerAddress: this._sender,
                                payerAddress: this._sender,
                            },
                        };
                        this._instructionsData = [ataInitData];
                        this._transaction.tokenAccountRentExemptAmount = this._rentExemptAmount;
                        return [4 /*yield*/, _super.prototype.buildImplementation.call(this)];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return AtaInitializationBuilder;
}(transactionBuilder_1.TransactionBuilder));
exports.AtaInitializationBuilder = AtaInitializationBuilder;
//# sourceMappingURL=data:application/json;base64,