/// <reference types="node" />
import BigNumber from 'bignumber.js';
import { BaseTransaction, TransactionType } from '../baseCoin';
import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { Transaction as SolTransaction } from '@solana/web3.js';
import { DurableNonceParams, TransactionExplanation, TxData } from './iface';
import { KeyPair } from '.';
import { TransactionRecipient } from '../baseCoin/iface';
export declare class Transaction extends BaseTransaction {
    protected _solTransaction: SolTransaction;
    private _lamportsPerSignature;
    protected _type: TransactionType;
    constructor(_coinConfig: Readonly<CoinConfig>);
    get solTransaction(): SolTransaction;
    set solTransaction(tx: SolTransaction);
    private get numberOfRequiredSignatures();
    /** @inheritDoc */
    get signablePayload(): Buffer;
    /** @inheritDoc **/
    get id(): string;
    get lamportsPerSignature(): number | undefined;
    set lamportsPerSignature(lamportsPerSignature: number | undefined);
    /** @inheritDoc */
    get signature(): string[];
    /**
     * Set the transaction type.
     *
     * @param {TransactionType} transactionType The transaction type to be set.
     */
    setTransactionType(transactionType: TransactionType): void;
    /** @inheritdoc */
    canSign(): boolean;
    /**
     * Signs transaction.
     *
     * @param {KeyPair} keyPair Signer keys.
     */
    sign(keyPair: KeyPair[] | KeyPair): Promise<void>;
    /** @inheritdoc */
    toBroadcastFormat(): string;
    /**
     * Sets this transaction payload
     *
     * @param rawTransaction
     */
    fromRawTransaction(rawTransaction: string): void;
    /** @inheritdoc */
    toJson(): TxData;
    /**
     * Get the nonce from the Solana Transaction
     * Throws if not set
     */
    private getNonce;
    /**
     * Load the input and output data on this transaction.
     */
    loadInputsAndOutputs(): void;
    /** @inheritDoc */
    explainTransaction(): TransactionExplanation;
    protected getExplainedTransaction(outputAmount: BigNumber, outputs: TransactionRecipient[], memo?: undefined | string, durableNonce?: undefined | DurableNonceParams): TransactionExplanation;
}
//# sourceMappingURL=transaction.d.ts.map