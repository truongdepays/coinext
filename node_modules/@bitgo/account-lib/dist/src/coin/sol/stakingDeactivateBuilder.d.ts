import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { TransactionType } from '../baseCoin';
import { Transaction } from './transaction';
import { TransactionBuilder } from './transactionBuilder';
export declare class StakingDeactivateBuilder extends TransactionBuilder {
    protected _stakingAddress: string;
    constructor(_coinConfig: Readonly<CoinConfig>);
    protected get transactionType(): TransactionType;
    /** @inheritdoc */
    initBuilder(tx: Transaction): void;
    /**
     * The staking address of the staking account.
     *
     * @param {string} stakingAddress public address of the staking account
     * @returns {StakingDeactivateBuilder} This staking deactivate builder.
     *
     * @see https://docs.solana.com/staking/stake-accounts#account-address
     */
    stakingAddress(stakingAddress: string): this;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
}
//# sourceMappingURL=stakingDeactivateBuilder.d.ts.map