import { Ed25519KeyPair } from '../baseCoin';
import { DefaultKeys, KeyPairOptions } from '../baseCoin/iface';
import { SolanaKeys } from './iface';
export declare class KeyPair extends Ed25519KeyPair {
    protected keyPair: DefaultKeys;
    protected source?: KeyPairOptions;
    /**
     * Public constructor. By default, creates a key pair with a random master seed.
     *
     * @param { KeyPairOptions } source Either a master seed, a private key, or a public key
     */
    constructor(source?: KeyPairOptions);
    /** @inheritdoc */
    recordKeysFromPrivateKeyInProtocolFormat(prv: string): DefaultKeys;
    /** @inheritdoc */
    recordKeysFromPublicKeyInProtocolFormat(pub: string): DefaultKeys;
    /**
     * Solana default keys format public key as a base58 string and secret key as Uint8Array
     *
     * @param {boolean} raw defines if the prv key is returned in Uint8Array, default is base58
     * @returns {SolanaKeys} The keys in the defined format
     */
    getKeys(raw?: boolean): SolanaKeys;
    /** @inheritdoc */
    getAddress(): string;
}
//# sourceMappingURL=keyPair.d.ts.map