import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { Transaction } from './transaction';
import { TransactionBuilder } from './transactionBuilder';
import { TransactionType } from '../baseCoin';
export declare class WalletInitializationBuilder extends TransactionBuilder {
    private _nonceAddress;
    private _amount;
    constructor(_coinConfig: Readonly<CoinConfig>);
    protected get transactionType(): TransactionType;
    /** @inheritDoc */
    initBuilder(tx: Transaction): void;
    /**
     * Sets the amount to fund the nonce account
     *
     * @param amount amount in lamports to fund the nonce account
     */
    amount(amount: string): this;
    /**
     * Sets the address for the nonce account
     * @param nonceAddress address of the new nonce account
     */
    address(nonceAddress: string): this;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
}
//# sourceMappingURL=walletInitializationBuilder.d.ts.map