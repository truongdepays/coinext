import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { TransactionBuilder } from './transactionBuilder';
import { Transaction } from './transaction';
import { TransactionType } from '../baseCoin';
export interface SendParams {
    address: string;
    amount: string;
}
export declare class TransferBuilder extends TransactionBuilder {
    private _sendParams;
    constructor(_coinConfig: Readonly<CoinConfig>);
    protected get transactionType(): TransactionType;
    initBuilder(tx: Transaction): void;
    /**
     *  Set a transfer
     *
     * @param {string} fromAddress - the sender address
     * @param {string} toAddress - the receiver address
     * @param {string} amount - the amount sent
     * @returns {TransactionBuilder} This transaction builder
     */
    send({ address, amount }: SendParams): this;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
}
//# sourceMappingURL=transferBuilder.d.ts.map