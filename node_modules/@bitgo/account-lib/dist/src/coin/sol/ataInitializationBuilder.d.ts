import { TransactionBuilder } from './transactionBuilder';
import { TransactionType } from '../baseCoin';
import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { Transaction } from './transaction';
import { AtaInitializationTransaction } from './ataInitializationTransaction';
export declare class AtaInitializationBuilder extends TransactionBuilder {
    private _mint;
    private _rentExemptAmount;
    protected _transaction: AtaInitializationTransaction;
    constructor(_coinConfig: Readonly<CoinConfig>);
    protected get transactionType(): TransactionType;
    /** @inheritDoc */
    initBuilder(tx: Transaction): void;
    /**
     * Sets the mint address of the associated token account
     *
     * @param mint mint name of associated token account
     */
    mint(mint: string): this;
    private validateMintOrThrow;
    /**
     * Used to set the minimum rent exempt amount
     *
     * @param rentExemptAmount minimum rent exempt amount in lamports
     */
    rentExemptAmount(rentExemptAmount: string): this;
    private validateRentExemptAmountOrThrow;
    /** @inheritdoc */
    validateTransaction(transaction?: Transaction): void;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
}
//# sourceMappingURL=ataInitializationBuilder.d.ts.map