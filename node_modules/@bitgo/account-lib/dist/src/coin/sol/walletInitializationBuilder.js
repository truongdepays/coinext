"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WalletInitializationBuilder = void 0;
var assert_1 = __importDefault(require("assert"));
var errors_1 = require("../baseCoin/errors");
var transactionBuilder_1 = require("./transactionBuilder");
var utils_1 = require("./utils");
var baseCoin_1 = require("../baseCoin");
var constants_1 = require("./constants");
var WalletInitializationBuilder = /** @class */ (function (_super) {
    __extends(WalletInitializationBuilder, _super);
    function WalletInitializationBuilder(_coinConfig) {
        return _super.call(this, _coinConfig) || this;
    }
    Object.defineProperty(WalletInitializationBuilder.prototype, "transactionType", {
        get: function () {
            return baseCoin_1.TransactionType.WalletInitialization;
        },
        enumerable: false,
        configurable: true
    });
    /** @inheritDoc */
    WalletInitializationBuilder.prototype.initBuilder = function (tx) {
        _super.prototype.initBuilder.call(this, tx);
        for (var _i = 0, _a = this._instructionsData; _i < _a.length; _i++) {
            var instruction = _a[_i];
            if (instruction.type === constants_1.InstructionBuilderTypes.CreateNonceAccount) {
                var walletInitInstruction = instruction;
                this.address(walletInitInstruction.params.nonceAddress);
                this.amount(walletInitInstruction.params.amount);
                this.sender(walletInitInstruction.params.authAddress);
            }
        }
    };
    /**
     * Sets the amount to fund the nonce account
     *
     * @param amount amount in lamports to fund the nonce account
     */
    WalletInitializationBuilder.prototype.amount = function (amount) {
        if (!amount || !utils_1.isValidAmount(amount)) {
            throw new errors_1.BuildTransactionError('Invalid or missing amount, got: ' + amount);
        }
        this._amount = amount;
        return this;
    };
    /**
     * Sets the address for the nonce account
     * @param nonceAddress address of the new nonce account
     */
    WalletInitializationBuilder.prototype.address = function (nonceAddress) {
        utils_1.validateAddress(nonceAddress, 'nonceAddress');
        this._nonceAddress = nonceAddress;
        return this;
    };
    /** @inheritdoc */
    WalletInitializationBuilder.prototype.buildImplementation = function () {
        return __awaiter(this, void 0, void 0, function () {
            var walletInitData;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        assert_1.default(this._sender, 'Sender must be set before building the transaction');
                        assert_1.default(this._amount, 'Amount must be set before building the transaction');
                        assert_1.default(this._nonceAddress, 'Nonce Address must be set before building the transaction');
                        walletInitData = {
                            type: constants_1.InstructionBuilderTypes.CreateNonceAccount,
                            params: {
                                fromAddress: this._sender,
                                nonceAddress: this._nonceAddress,
                                authAddress: this._sender,
                                amount: this._amount,
                            },
                        };
                        this._instructionsData = [walletInitData];
                        return [4 /*yield*/, _super.prototype.buildImplementation.call(this)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return WalletInitializationBuilder;
}(transactionBuilder_1.TransactionBuilder));
exports.WalletInitializationBuilder = WalletInitializationBuilder;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FsbGV0SW5pdGlhbGl6YXRpb25CdWlsZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvaW4vc29sL3dhbGxldEluaXRpYWxpemF0aW9uQnVpbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxrREFBNEI7QUFHNUIsNkNBQTJEO0FBRTNELDJEQUEwRDtBQUMxRCxpQ0FBeUQ7QUFDekQsd0NBQThDO0FBRTlDLHlDQUFzRDtBQUV0RDtJQUFpRCwrQ0FBa0I7SUFJakUscUNBQVksV0FBaUM7ZUFDM0Msa0JBQU0sV0FBVyxDQUFDO0lBQ3BCLENBQUM7SUFDRCxzQkFBYyx3REFBZTthQUE3QjtZQUNFLE9BQU8sMEJBQWUsQ0FBQyxvQkFBb0IsQ0FBQztRQUM5QyxDQUFDOzs7T0FBQTtJQUVELGtCQUFrQjtJQUNsQixpREFBVyxHQUFYLFVBQVksRUFBZTtRQUN6QixpQkFBTSxXQUFXLFlBQUMsRUFBRSxDQUFDLENBQUM7UUFFdEIsS0FBMEIsVUFBc0IsRUFBdEIsS0FBQSxJQUFJLENBQUMsaUJBQWlCLEVBQXRCLGNBQXNCLEVBQXRCLElBQXNCLEVBQUU7WUFBN0MsSUFBTSxXQUFXLFNBQUE7WUFDcEIsSUFBSSxXQUFXLENBQUMsSUFBSSxLQUFLLG1DQUF1QixDQUFDLGtCQUFrQixFQUFFO2dCQUNuRSxJQUFNLHFCQUFxQixHQUFlLFdBQVcsQ0FBQztnQkFFdEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQ3hELElBQUksQ0FBQyxNQUFNLENBQUMscUJBQXFCLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNqRCxJQUFJLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUN2RDtTQUNGO0lBQ0gsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCw0Q0FBTSxHQUFOLFVBQU8sTUFBYztRQUNuQixJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMscUJBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUNyQyxNQUFNLElBQUksOEJBQXFCLENBQUMsa0NBQWtDLEdBQUcsTUFBTSxDQUFDLENBQUM7U0FDOUU7UUFFRCxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRDs7O09BR0c7SUFDSCw2Q0FBTyxHQUFQLFVBQVEsWUFBb0I7UUFDMUIsdUJBQWUsQ0FBQyxZQUFZLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxZQUFZLENBQUM7UUFFbEMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsa0JBQWtCO0lBQ0YseURBQW1CLEdBQW5DOzs7Ozs7d0JBQ0UsZ0JBQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLG9EQUFvRCxDQUFDLENBQUM7d0JBQzNFLGdCQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxvREFBb0QsQ0FBQyxDQUFDO3dCQUMzRSxnQkFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsMkRBQTJELENBQUMsQ0FBQzt3QkFFbEYsY0FBYyxHQUFlOzRCQUNqQyxJQUFJLEVBQUUsbUNBQXVCLENBQUMsa0JBQWtCOzRCQUNoRCxNQUFNLEVBQUU7Z0NBQ04sV0FBVyxFQUFFLElBQUksQ0FBQyxPQUFPO2dDQUN6QixZQUFZLEVBQUUsSUFBSSxDQUFDLGFBQWE7Z0NBQ2hDLFdBQVcsRUFBRSxJQUFJLENBQUMsT0FBTztnQ0FDekIsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPOzZCQUNyQjt5QkFDRixDQUFDO3dCQUNGLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO3dCQUVuQyxxQkFBTSxpQkFBTSxtQkFBbUIsV0FBRSxFQUFBOzRCQUF4QyxzQkFBTyxTQUFpQyxFQUFDOzs7O0tBQzFDO0lBQ0gsa0NBQUM7QUFBRCxDQUFDLEFBdEVELENBQWlELHVDQUFrQixHQXNFbEU7QUF0RVksa0VBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzc2VydCBmcm9tICdhc3NlcnQnO1xuXG5pbXBvcnQgeyBCYXNlQ29pbiBhcyBDb2luQ29uZmlnIH0gZnJvbSAnQGJpdGdvL3N0YXRpY3MnO1xuaW1wb3J0IHsgQnVpbGRUcmFuc2FjdGlvbkVycm9yIH0gZnJvbSAnLi4vYmFzZUNvaW4vZXJyb3JzJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uIH0gZnJvbSAnLi90cmFuc2FjdGlvbic7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbkJ1aWxkZXIgfSBmcm9tICcuL3RyYW5zYWN0aW9uQnVpbGRlcic7XG5pbXBvcnQgeyBpc1ZhbGlkQW1vdW50LCB2YWxpZGF0ZUFkZHJlc3MgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uVHlwZSB9IGZyb20gJy4uL2Jhc2VDb2luJztcbmltcG9ydCB7IFdhbGxldEluaXQgfSBmcm9tICcuL2lmYWNlJztcbmltcG9ydCB7IEluc3RydWN0aW9uQnVpbGRlclR5cGVzIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5leHBvcnQgY2xhc3MgV2FsbGV0SW5pdGlhbGl6YXRpb25CdWlsZGVyIGV4dGVuZHMgVHJhbnNhY3Rpb25CdWlsZGVyIHtcbiAgcHJpdmF0ZSBfbm9uY2VBZGRyZXNzOiBzdHJpbmc7XG4gIHByaXZhdGUgX2Ftb3VudDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKF9jb2luQ29uZmlnOiBSZWFkb25seTxDb2luQ29uZmlnPikge1xuICAgIHN1cGVyKF9jb2luQ29uZmlnKTtcbiAgfVxuICBwcm90ZWN0ZWQgZ2V0IHRyYW5zYWN0aW9uVHlwZSgpOiBUcmFuc2FjdGlvblR5cGUge1xuICAgIHJldHVybiBUcmFuc2FjdGlvblR5cGUuV2FsbGV0SW5pdGlhbGl6YXRpb247XG4gIH1cblxuICAvKiogQGluaGVyaXREb2MgKi9cbiAgaW5pdEJ1aWxkZXIodHg6IFRyYW5zYWN0aW9uKTogdm9pZCB7XG4gICAgc3VwZXIuaW5pdEJ1aWxkZXIodHgpO1xuXG4gICAgZm9yIChjb25zdCBpbnN0cnVjdGlvbiBvZiB0aGlzLl9pbnN0cnVjdGlvbnNEYXRhKSB7XG4gICAgICBpZiAoaW5zdHJ1Y3Rpb24udHlwZSA9PT0gSW5zdHJ1Y3Rpb25CdWlsZGVyVHlwZXMuQ3JlYXRlTm9uY2VBY2NvdW50KSB7XG4gICAgICAgIGNvbnN0IHdhbGxldEluaXRJbnN0cnVjdGlvbjogV2FsbGV0SW5pdCA9IGluc3RydWN0aW9uO1xuXG4gICAgICAgIHRoaXMuYWRkcmVzcyh3YWxsZXRJbml0SW5zdHJ1Y3Rpb24ucGFyYW1zLm5vbmNlQWRkcmVzcyk7XG4gICAgICAgIHRoaXMuYW1vdW50KHdhbGxldEluaXRJbnN0cnVjdGlvbi5wYXJhbXMuYW1vdW50KTtcbiAgICAgICAgdGhpcy5zZW5kZXIod2FsbGV0SW5pdEluc3RydWN0aW9uLnBhcmFtcy5hdXRoQWRkcmVzcyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGFtb3VudCB0byBmdW5kIHRoZSBub25jZSBhY2NvdW50XG4gICAqXG4gICAqIEBwYXJhbSBhbW91bnQgYW1vdW50IGluIGxhbXBvcnRzIHRvIGZ1bmQgdGhlIG5vbmNlIGFjY291bnRcbiAgICovXG4gIGFtb3VudChhbW91bnQ6IHN0cmluZyk6IHRoaXMge1xuICAgIGlmICghYW1vdW50IHx8ICFpc1ZhbGlkQW1vdW50KGFtb3VudCkpIHtcbiAgICAgIHRocm93IG5ldyBCdWlsZFRyYW5zYWN0aW9uRXJyb3IoJ0ludmFsaWQgb3IgbWlzc2luZyBhbW91bnQsIGdvdDogJyArIGFtb3VudCk7XG4gICAgfVxuXG4gICAgdGhpcy5fYW1vdW50ID0gYW1vdW50O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGFkZHJlc3MgZm9yIHRoZSBub25jZSBhY2NvdW50XG4gICAqIEBwYXJhbSBub25jZUFkZHJlc3MgYWRkcmVzcyBvZiB0aGUgbmV3IG5vbmNlIGFjY291bnRcbiAgICovXG4gIGFkZHJlc3Mobm9uY2VBZGRyZXNzOiBzdHJpbmcpOiB0aGlzIHtcbiAgICB2YWxpZGF0ZUFkZHJlc3Mobm9uY2VBZGRyZXNzLCAnbm9uY2VBZGRyZXNzJyk7XG4gICAgdGhpcy5fbm9uY2VBZGRyZXNzID0gbm9uY2VBZGRyZXNzO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKiogQGluaGVyaXRkb2MgKi9cbiAgcHJvdGVjdGVkIGFzeW5jIGJ1aWxkSW1wbGVtZW50YXRpb24oKTogUHJvbWlzZTxUcmFuc2FjdGlvbj4ge1xuICAgIGFzc2VydCh0aGlzLl9zZW5kZXIsICdTZW5kZXIgbXVzdCBiZSBzZXQgYmVmb3JlIGJ1aWxkaW5nIHRoZSB0cmFuc2FjdGlvbicpO1xuICAgIGFzc2VydCh0aGlzLl9hbW91bnQsICdBbW91bnQgbXVzdCBiZSBzZXQgYmVmb3JlIGJ1aWxkaW5nIHRoZSB0cmFuc2FjdGlvbicpO1xuICAgIGFzc2VydCh0aGlzLl9ub25jZUFkZHJlc3MsICdOb25jZSBBZGRyZXNzIG11c3QgYmUgc2V0IGJlZm9yZSBidWlsZGluZyB0aGUgdHJhbnNhY3Rpb24nKTtcblxuICAgIGNvbnN0IHdhbGxldEluaXREYXRhOiBXYWxsZXRJbml0ID0ge1xuICAgICAgdHlwZTogSW5zdHJ1Y3Rpb25CdWlsZGVyVHlwZXMuQ3JlYXRlTm9uY2VBY2NvdW50LFxuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIGZyb21BZGRyZXNzOiB0aGlzLl9zZW5kZXIsXG4gICAgICAgIG5vbmNlQWRkcmVzczogdGhpcy5fbm9uY2VBZGRyZXNzLFxuICAgICAgICBhdXRoQWRkcmVzczogdGhpcy5fc2VuZGVyLFxuICAgICAgICBhbW91bnQ6IHRoaXMuX2Ftb3VudCxcbiAgICAgIH0sXG4gICAgfTtcbiAgICB0aGlzLl9pbnN0cnVjdGlvbnNEYXRhID0gW3dhbGxldEluaXREYXRhXTtcblxuICAgIHJldHVybiBhd2FpdCBzdXBlci5idWlsZEltcGxlbWVudGF0aW9uKCk7XG4gIH1cbn1cbiJdfQ==