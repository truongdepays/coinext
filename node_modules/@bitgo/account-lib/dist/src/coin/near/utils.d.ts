import { BaseUtils } from '../baseCoin';
export declare class Utils implements BaseUtils {
    /** @inheritdoc */
    isValidAddress(address: string): boolean;
    /** @inheritdoc */
    isValidBlockId(hash: string): boolean;
    /** @inheritdoc */
    isValidPrivateKey(key: string): boolean;
    /** @inheritdoc */
    isValidPublicKey(pubKey: string): boolean;
    /**
     * Check if the key have the correct format
     *
     * @param {string} key - string to be checked
     * @return {boolean} true if the string have the correct format otherwise return false
     */
    isValidKey(key: string): boolean;
    /**
     * Check if the account have the correct format
     *
     * @param {string} accountId - string to be checked
     * @return {boolean} if the string can have the correct format and match the expected length
     * or can create a new keyPair
     */
    isValidAccountId(accountId: string): boolean;
    /** @inheritdoc */
    isValidSignature(signature: string): boolean;
    /** @inheritdoc */
    isValidTransactionId(txId: string): boolean;
    base58Encode(value: Uint8Array): string;
    /**
     * Check if base58 decoded string is equal to length
     *
     * @param {string} value - string to be checked
     * @param {number} length - expected decoded length
     * @return {boolean} if the string can decoded as base58 and match the expected length
     */
    isBase58(value: string, length: number): boolean;
}
declare const utils: Utils;
export default utils;
//# sourceMappingURL=utils.d.ts.map