import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { BaseKey } from '../baseCoin/iface';
import { TransactionBuilder } from './transactionBuilder';
import { Transaction } from './transaction';
export declare class TransferBuilder extends TransactionBuilder {
    private _amount;
    constructor(_coinConfig: Readonly<CoinConfig>);
    /**
     * Initialize the transaction builder fields using the decoded transaction data
     *
     * @param {Transaction} tx the transaction data
     */
    initBuilder(tx: Transaction): void;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
    /** @inheritdoc */
    protected signImplementation(key: BaseKey): Transaction;
    /**
     * Sets the amount of this transaction.
     *
     * @param {string} value the amount to be sent in yocto (1 Near = 1e24 yoctos)
     * @returns {TransactionBuilder} This transaction builder
     */
    amount(value: string): this;
}
//# sourceMappingURL=transferBuilder.d.ts.map