import { FunctionCall } from './iface';
/**
 * Contains parameters to call a Near Function Call action
 */
export declare class ContractCallWrapper {
    private _methodName;
    private _args;
    private _gas;
    private _deposit;
    /** Set method contract name */
    set methodName(methodName: string);
    /** Get method contract name */
    get methodName(): string;
    /** Set gas, expresed on yocto */
    set gas(gas: string);
    /** Get gas, expresed on yocto*/
    get gas(): string;
    /** Set deposit, expresed on yocto */
    set deposit(deposit: string);
    /** Get deposit, expresed on yocto */
    get deposit(): string;
    /** Get args, which are the parameters of a method */
    set args(args: Record<string, unknown>);
    /** Set args, which are the parameters of a method */
    get args(): Record<string, unknown>;
    /**
     * Get all parameters of the contractCallWrapper
     * @returns {FunctionCall}
     */
    getParams(): FunctionCall;
    private isValidAmount;
}
//# sourceMappingURL=contractCallWrapper.d.ts.map