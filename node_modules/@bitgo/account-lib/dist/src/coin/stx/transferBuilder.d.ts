import { BaseCoin as CoinConfig } from '@bitgo/statics';
import BigNum from 'bn.js';
import { Transaction } from './transaction';
import { TransactionBuilder } from './transactionBuilder';
export declare class TransferBuilder extends TransactionBuilder {
    private _options;
    protected _toAddress: string;
    protected _amount: BigNum;
    constructor(_coinConfig: Readonly<CoinConfig>);
    initBuilder(tx: Transaction): void;
    /** @inheritdoc */
    protected buildImplementation(): Promise<Transaction>;
    private buildTokenTransferOptions;
    /**
     * Set the destination address where the funds will be sent,
     * it may take the format `'<shard>.<realm>.<account>'` or `'<account>'`
     *
     * @param {string} address the address to transfer funds to
     * @returns {TransferBuilder} the builder with the new parameter set
     */
    to(address: string): this;
    /**
     * Set the amount to be transferred
     *
     * @param {string} amount amount to transfer in tinyBars (there are 100,000,000 tinyBars in one Hbar)
     * @returns {TransferBuilder} the builder with the new parameter set
     */
    amount(amount: string): this;
}
//# sourceMappingURL=transferBuilder.d.ts.map