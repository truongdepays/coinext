/// <reference types="node" />
import { BlsKeyPair } from '../baseCoin/blsKeyPair';
import { KeyPairOptions, BlsKeys } from '../baseCoin/iface';
/**
 * Ethereum keys and address management.
 */
export declare class KeyPair extends BlsKeyPair {
    /**
     * Public constructor. By default, creates a key pair with a random master seed.
     *
     */
    constructor(source?: KeyPairOptions);
    /**
     * ETH2 default keys format is a pair of Uint8Array keys
     *
     * @returns { BlsKeys } The keys in the defined format
     */
    getKeys(): BlsKeys;
    /**
     * Whether input is a valid BLS public key
     *
     * @param {string} pub the public key to validate
     * @returns {boolean} Whether input is a valid public key or not
     */
    static isValidPub(pub: string): boolean;
    /**
     * Whether the input is a valid BLS private key
     *
     * @param {string | Buffer | bigint} prv a private key to validate
     * @returns {boolean} Whether the input is a valid private key or not
     */
    static isValidPrv(prv: string | Buffer | bigint): boolean;
}
//# sourceMappingURL=keyPair.d.ts.map