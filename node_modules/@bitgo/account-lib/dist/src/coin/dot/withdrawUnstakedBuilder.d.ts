import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { DecodedSignedTx, DecodedSigningPayload, UnsignedTransaction } from '@substrate/txwrapper-core';
import { TransactionType } from '../baseCoin';
import { Transaction } from './transaction';
import { TransactionBuilder } from './transactionBuilder';
export declare class WithdrawUnstakedBuilder extends TransactionBuilder {
    protected _numSlashingSpans: number;
    constructor(_coinConfig: Readonly<CoinConfig>);
    /**
     *
     * Frees up any unlocked chunks.
     * The balance can now be used by the stash account to do whatever it wants.
     *
     * @returns {UnsignedTransaction} an unsigned Dot transaction
     *
     * @see https://polkadot.js.org/docs/substrate/extrinsics/#withdrawunbondednum_slashing_spans-u32
     */
    protected buildTransaction(): UnsignedTransaction;
    protected get transactionType(): TransactionType;
    /**
     *
     * The number of slashing spans.
     *
     * @param {number} slashingSpans
     * @returns {WithdrawUnstakedBuilder} This withdrawUnstaked builder.
     *
     * @see https://polkadot.js.org/docs/substrate/extrinsics/#withdrawunbondednum_slashing_spans-u32
     */
    slashingSpans(slashingSpans: number): this;
    /** @inheritdoc */
    validateDecodedTransaction(decodedTxn: DecodedSigningPayload | DecodedSignedTx): void;
    /** @inheritdoc */
    protected fromImplementation(rawTransaction: string): Transaction;
    /** @inheritdoc */
    validateTransaction(_: Transaction): void;
    private validateFields;
}
//# sourceMappingURL=withdrawUnstakedBuilder.d.ts.map