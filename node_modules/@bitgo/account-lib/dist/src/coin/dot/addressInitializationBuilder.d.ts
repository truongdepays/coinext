import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { TransactionBuilder } from './transactionBuilder';
import { Transaction } from './transaction';
import { DecodedSignedTx, DecodedSigningPayload, UnsignedTransaction } from '@substrate/txwrapper-core';
import { TransactionType } from '../baseCoin';
import { ProxyType } from './iface';
import { BaseAddress } from '../baseCoin/iface';
export declare class AddressInitializationBuilder extends TransactionBuilder {
    protected _delegate: string;
    protected _proxyType: ProxyType;
    protected _delay: string;
    protected _index: number;
    constructor(_coinConfig: Readonly<CoinConfig>);
    /** @inheritDoc */
    protected buildTransaction(): UnsignedTransaction;
    /**
     * Register a proxy account for the sender that is able to make calls on its behalf.
     *
     * @returns {UnsignedTransaction} an unsigned Dot transaction
     *
     * @see https://polkadot.js.org/docs/substrate/extrinsics/#proxy
     */
    protected buildAddProxyTransaction(): UnsignedTransaction;
    /**
     * Spawn a receive address for the sender
     *
     * @return {UnsignedTransaction} an unsigned Dot transaction
     */
    protected buildAnonymousProxyTransaction(): UnsignedTransaction;
    protected get transactionType(): TransactionType;
    /**
     * The account to delegate auth to.
     *
     * @param {BaseAddress} owner
     * @returns {AddressInitializationBuilder} This builder.
     *
     * @see https://wiki.polkadot.network/docs/learn-proxies#why-use-a-proxy
     */
    owner(owner: BaseAddress): this;
    /**
     * Used for disambiguation if multiple calls are made in the same transaction
     * Use 0 as a default
     *
     * @param {number} index
     *
     * @returns {AddressInitializationBuilder} This transfer builder.
     */
    index(index: number): this;
    /**
     * The proxy type to add.
     *
     * @param {proxyType} proxyType
     * @returns {AddressInitializationBuilder} This builder.
     *
     * @see https://wiki.polkadot.network/docs/learn-proxies#proxy-types
     */
    type(proxyType: ProxyType): this;
    /**
     * The number of blocks that an announcement must be in place for.
     * before the corresponding call may be dispatched.
     * If zero, then no announcement is needed.
     * TODO: move to the validity window method once it has been standardized
     *
     * @param {string} delay
     * @returns {AddressInitializationBuilder} This transfer builder.
     *
     * @see https://wiki.polkadot.network/docs/learn-proxies#time-delayed-proxies
     */
    delay(delay: string): this;
    /** @inheritdoc */
    validateDecodedTransaction(decodedTxn: DecodedSigningPayload | DecodedSignedTx): void;
    /** @inheritdoc */
    protected fromImplementation(rawTransaction: string): Transaction;
    /** @inheritdoc */
    validateTransaction(_: Transaction): void;
    private validateFields;
    private validateAddProxyFields;
    private validateAnonymousProxyFields;
}
//# sourceMappingURL=addressInitializationBuilder.d.ts.map