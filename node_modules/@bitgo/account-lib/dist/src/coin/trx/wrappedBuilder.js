"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WrappedBuilder = void 0;
var errors_1 = require("../baseCoin/errors");
var transactionBuilder_1 = require("./transactionBuilder");
var keyPair_1 = require("./keyPair");
var utils_1 = require("./utils");
var enum_1 = require("./enum");
var contractCallBuilder_1 = require("./contractCallBuilder");
/**
 * Wrapped Builder class
 * This builder is created to maintain compatibility with the current uses of account-lib
 * It has an instance of Transaction Builder or Contract Call Builder as required.
 */
var WrappedBuilder = /** @class */ (function (_super) {
    __extends(WrappedBuilder, _super);
    function WrappedBuilder(_coinConfig) {
        var _this = _super.call(this, _coinConfig) || this;
        // defaults to old builder
        _this._builder = new transactionBuilder_1.TransactionBuilder(_coinConfig);
        return _this;
    }
    /**
     * Returns a specific builder to create a contract call transaction
     *
     * @param {Transaction} [tx] The transaction to initialize builder
     * @returns {ContractCallBuilder} The specific contract call builder
     */
    WrappedBuilder.prototype.getContractCallBuilder = function (tx) {
        return this.initializeBuilder(tx, new contractCallBuilder_1.ContractCallBuilder(this._coinConfig));
    };
    WrappedBuilder.prototype.getTransactionBuilder = function (tx) {
        return this.initializeBuilder(tx, new transactionBuilder_1.TransactionBuilder(this._coinConfig));
    };
    WrappedBuilder.prototype.initializeBuilder = function (tx, builder) {
        if (tx) {
            builder.initBuilder(tx);
        }
        return builder;
    };
    /** @inheritdoc */
    WrappedBuilder.prototype.extendValidTo = function (extensionMs) {
        this._builder.extendValidTo(extensionMs);
    };
    /** @inheritdoc */
    WrappedBuilder.prototype.sign = function (key) {
        this._builder.sign(key);
    };
    /** @inheritdoc */
    WrappedBuilder.prototype.build = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this._builder.build()];
            });
        });
    };
    /** @inheritdoc */
    WrappedBuilder.prototype.from = function (raw) {
        this.validateRawTransaction(raw);
        var rawDataHex = this.getTxReceipt(raw);
        var decodedTx = utils_1.decodeTransaction(rawDataHex);
        var contractType = decodedTx.contractType;
        switch (contractType) {
            case enum_1.ContractType.Transfer:
            case enum_1.ContractType.AccountPermissionUpdate:
                this._builder = this.getTransactionBuilder(raw);
                return this._builder;
            case enum_1.ContractType.TriggerSmartContract:
                return this.getContractCallBuilder(raw);
            default:
                throw new errors_1.InvalidTransactionError('Invalid transaction type: ' + contractType);
        }
    };
    /**
     * Get the raw data hex from a raw transaction
     *
     * @param {string | { [key: string]: any }} raw the raw transaction as a string or as an object
     * @returns {string} the raw data hex
     */
    WrappedBuilder.prototype.getTxReceipt = function (raw) {
        return raw['raw_data_hex'] || this.getTxReceipt(JSON.parse(raw));
    };
    /** @inheritdoc */
    WrappedBuilder.prototype.validateAddress = function (address) {
        this._builder.validateAddress(address);
    };
    /** @inheritdoc */
    WrappedBuilder.prototype.validateKey = function (key) {
        try {
            new keyPair_1.KeyPair({ prv: key.key });
        }
        catch (err) {
            throw new Error('The provided key is not valid');
        }
    };
    /** @inheritdoc */
    WrappedBuilder.prototype.validateRawTransaction = function (rawTransaction) {
        this._builder.validateRawTransaction(rawTransaction);
    };
    /** @inheritdoc */
    WrappedBuilder.prototype.validateTransaction = function (transaction) {
        this._builder.validateTransaction(transaction);
    };
    /** @inheritdoc */
    WrappedBuilder.prototype.validateValue = function (value) {
        this._builder.validateValue(value);
    };
    return WrappedBuilder;
}(transactionBuilder_1.TransactionBuilder));
exports.WrappedBuilder = WrappedBuilder;
//# sourceMappingURL=data:application/json;base64,