import { CLValue, CLPublicKey, RuntimeArgs } from 'casper-js-sdk';
import { BigNumberish } from '@ethersproject/bignumber';
import { KeyPair } from '.';
export interface CasperTransaction {
    hash: string;
    from: string;
    fee: Fee;
    deployType: string;
    startTime?: string;
    expiration?: number;
    to?: string;
    amount?: string;
    transferId?: number;
    owner1?: string;
    owner2?: string;
    owner3?: string;
    fromDelegate?: string;
    validator?: string;
}
export interface CasperNode {
    nodeUrl: string;
}
export interface SignatureData {
    signature: string;
    keyPair: KeyPair;
}
export interface Fee {
    gasLimit: string;
    gasPrice?: string;
}
export interface CasperTransferTransaction {
    amount: BigNumberish;
    target: CLPublicKey;
    id?: number;
    extraArguments: Map<string, CLValue>;
}
/**
 * Delegate Session Required Data
 */
export interface CasperDelegateTransaction {
    action: string;
    delegator: CLPublicKey;
    validator: CLPublicKey;
    amount: BigNumberish;
    extraArguments: Map<string, CLValue>;
}
export interface CasperModuleBytesTransaction {
    moduleBytes: Uint8Array;
    args: RuntimeArgs;
    extraArguments: Map<string, CLValue>;
}
export interface Owner {
    address: CLPublicKey;
    weight: number;
}
export declare type WalletInitContractArgs = Record<'action' | 'deployment_thereshold' | 'key_management_threshold' | 'accounts' | 'weights', CLValue>;
export declare type DelegateUndelegateContractArgs = Record<'action' | 'delegator' | 'validator' | 'amount', CLValue>;
/**
 * Secp256k1 return type for sign operations
 */
export interface SignResponse {
    signature: Uint8Array;
    recid: number;
}
export interface AddressDetails {
    address: string;
    transferId?: string;
}
//# sourceMappingURL=ifaces.d.ts.map