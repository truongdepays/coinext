import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { DeployUtil } from 'casper-js-sdk';
import { BaseTransaction, TransactionType } from '../baseCoin';
import { BaseKey } from '../baseCoin/iface';
import { KeyPair } from './keyPair';
import { CasperTransaction } from './ifaces';
export declare class Transaction extends BaseTransaction {
    protected _type: TransactionType;
    protected _deploy: DeployUtil.Deploy;
    constructor(_coinConfig: Readonly<CoinConfig>);
    /** @inheritdoc */
    canSign(key: BaseKey): boolean;
    sign(keyPair: KeyPair): void;
    /**
     * Add a signature to this transaction and to and its deploy
     *
     * @param {string} signature The signature to add, in string hex format
     * @param {KeyPair} keyPair The key pair that created the signature
     */
    addSignature(signature: string, keyPair: KeyPair): void;
    /** @inheritdoc */
    toBroadcastFormat(): string;
    /** @inheritdoc */
    toJson(): CasperTransaction;
    /**
     * Set the transaction type
     *
     * @param {TransactionType} transactionType The transaction type to be set
     */
    setTransactionType(transactionType: TransactionType): void;
    /**
     * Retrieve signatures from the deploy instance and load them into the signatures list
     */
    loadPreviousSignatures(): void;
    /**
     * Set owners inside a json representing a wallet initialization tx.
     *
     * @param {Record<string, any>} txJson json to modify
     */
    setOwnersInJson(txJson: Record<string, any>): void;
    /**
     * Set transfer fields inside a json representing a transfer tx.
     *
     * @param {Record<string, any>} txJson json to modify
     */
    setTransfersFieldsInJson(txJson: Record<string, any>): void;
    /**
     * Set delegate / undelegate fields inside a json representing the tx.
     *
     * @param {Record<string, any>} txJson json to modify
     */
    setDelegateFieldsInJson(txJson: Record<string, any>): void;
    get casperTx(): DeployUtil.Deploy;
    set casperTx(deploy: DeployUtil.Deploy);
}
//# sourceMappingURL=transaction.d.ts.map