"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeyDilutionError = exports.AddressValidationError = exports.InsufficientFeeError = void 0;
var errors_1 = require("../baseCoin/errors");
var InsufficientFeeError = /** @class */ (function (_super) {
    __extends(InsufficientFeeError, _super);
    function InsufficientFeeError(providedFee, minimum) {
        var _this = _super.call(this, "The provided fee of '" + providedFee + "' microalgos cannot be less than the " +
            ("minimum fee of '" + minimum + "' microalgos")) || this;
        _this.name = InsufficientFeeError.name;
        return _this;
    }
    return InsufficientFeeError;
}(errors_1.BuildTransactionError));
exports.InsufficientFeeError = InsufficientFeeError;
var AddressValidationError = /** @class */ (function (_super) {
    __extends(AddressValidationError, _super);
    function AddressValidationError(malformedAddress) {
        var _this = _super.call(this, "The address '" + malformedAddress + "' is not a well-formed algorand address") || this;
        _this.name = AddressValidationError.name;
        return _this;
    }
    return AddressValidationError;
}(errors_1.BuildTransactionError));
exports.AddressValidationError = AddressValidationError;
var KeyDilutionError = /** @class */ (function (_super) {
    __extends(KeyDilutionError, _super);
    function KeyDilutionError(incorrectValue) {
        var _this = _super.call(this, "The keyDilution value '" + incorrectValue + "' must be less than or equal to the square root of the voteKey validity range.") || this;
        _this.name = KeyDilutionError.name;
        return _this;
    }
    return KeyDilutionError;
}(errors_1.BuildTransactionError));
exports.KeyDilutionError = KeyDilutionError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvaW4vYWxnby9lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQTJEO0FBRTNEO0lBQTBDLHdDQUFxQjtJQUM3RCw4QkFBWSxXQUFtQixFQUFFLE9BQWU7UUFBaEQsWUFDRSxrQkFDRSwwQkFBd0IsV0FBVywwQ0FBdUM7YUFDeEUscUJBQW1CLE9BQU8saUJBQWMsQ0FBQSxDQUMzQyxTQUVGO1FBREMsS0FBSSxDQUFDLElBQUksR0FBRyxvQkFBb0IsQ0FBQyxJQUFJLENBQUM7O0lBQ3hDLENBQUM7SUFDSCwyQkFBQztBQUFELENBQUMsQUFSRCxDQUEwQyw4QkFBcUIsR0FROUQ7QUFSWSxvREFBb0I7QUFVakM7SUFBNEMsMENBQXFCO0lBQy9ELGdDQUFZLGdCQUF3QjtRQUFwQyxZQUNFLGtCQUFNLGtCQUFnQixnQkFBZ0IsNENBQXlDLENBQUMsU0FFakY7UUFEQyxLQUFJLENBQUMsSUFBSSxHQUFHLHNCQUFzQixDQUFDLElBQUksQ0FBQzs7SUFDMUMsQ0FBQztJQUNILDZCQUFDO0FBQUQsQ0FBQyxBQUxELENBQTRDLDhCQUFxQixHQUtoRTtBQUxZLHdEQUFzQjtBQU1uQztJQUFzQyxvQ0FBcUI7SUFDekQsMEJBQVksY0FBc0I7UUFBbEMsWUFDRSxrQkFDRSw0QkFBMEIsY0FBYyxtRkFBZ0YsQ0FDekgsU0FFRjtRQURDLEtBQUksQ0FBQyxJQUFJLEdBQUcsZ0JBQWdCLENBQUMsSUFBSSxDQUFDOztJQUNwQyxDQUFDO0lBQ0gsdUJBQUM7QUFBRCxDQUFDLEFBUEQsQ0FBc0MsOEJBQXFCLEdBTzFEO0FBUFksNENBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVpbGRUcmFuc2FjdGlvbkVycm9yIH0gZnJvbSAnLi4vYmFzZUNvaW4vZXJyb3JzJztcblxuZXhwb3J0IGNsYXNzIEluc3VmZmljaWVudEZlZUVycm9yIGV4dGVuZHMgQnVpbGRUcmFuc2FjdGlvbkVycm9yIHtcbiAgY29uc3RydWN0b3IocHJvdmlkZWRGZWU6IG51bWJlciwgbWluaW11bTogbnVtYmVyKSB7XG4gICAgc3VwZXIoXG4gICAgICBgVGhlIHByb3ZpZGVkIGZlZSBvZiAnJHtwcm92aWRlZEZlZX0nIG1pY3JvYWxnb3MgY2Fubm90IGJlIGxlc3MgdGhhbiB0aGUgYCArXG4gICAgICAgIGBtaW5pbXVtIGZlZSBvZiAnJHttaW5pbXVtfScgbWljcm9hbGdvc2AsXG4gICAgKTtcbiAgICB0aGlzLm5hbWUgPSBJbnN1ZmZpY2llbnRGZWVFcnJvci5uYW1lO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBBZGRyZXNzVmFsaWRhdGlvbkVycm9yIGV4dGVuZHMgQnVpbGRUcmFuc2FjdGlvbkVycm9yIHtcbiAgY29uc3RydWN0b3IobWFsZm9ybWVkQWRkcmVzczogc3RyaW5nKSB7XG4gICAgc3VwZXIoYFRoZSBhZGRyZXNzICcke21hbGZvcm1lZEFkZHJlc3N9JyBpcyBub3QgYSB3ZWxsLWZvcm1lZCBhbGdvcmFuZCBhZGRyZXNzYCk7XG4gICAgdGhpcy5uYW1lID0gQWRkcmVzc1ZhbGlkYXRpb25FcnJvci5uYW1lO1xuICB9XG59XG5leHBvcnQgY2xhc3MgS2V5RGlsdXRpb25FcnJvciBleHRlbmRzIEJ1aWxkVHJhbnNhY3Rpb25FcnJvciB7XG4gIGNvbnN0cnVjdG9yKGluY29ycmVjdFZhbHVlOiBudW1iZXIpIHtcbiAgICBzdXBlcihcbiAgICAgIGBUaGUga2V5RGlsdXRpb24gdmFsdWUgJyR7aW5jb3JyZWN0VmFsdWV9JyBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byB0aGUgc3F1YXJlIHJvb3Qgb2YgdGhlIHZvdGVLZXkgdmFsaWRpdHkgcmFuZ2UuYCxcbiAgICApO1xuICAgIHRoaXMubmFtZSA9IEtleURpbHV0aW9uRXJyb3IubmFtZTtcbiAgfVxufVxuIl19