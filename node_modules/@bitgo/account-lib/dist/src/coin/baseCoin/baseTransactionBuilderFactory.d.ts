import { BaseCoin as CoinConfig } from '@bitgo/statics';
import { DeployUtil } from 'casper-js-sdk';
/**
 * Generic transaction builder factory to be extended with coin specific logic.
 * Provide a set of transaction builders to create each transaction type.
 */
export declare abstract class BaseTransactionBuilderFactory {
    protected _coinConfig: Readonly<CoinConfig>;
    /**
     * Base constructor.
     *
     * @param {CoinConfig} _coinConfig BaseCoin from statics library
     */
    protected constructor(_coinConfig: Readonly<CoinConfig>);
    /**
     * Returns an specific builder to create a wallet initialization transaction
     */
    abstract getWalletInitializationBuilder(): any;
    /**
     * Returns a specific builder to create a funds transfer transaction
     */
    abstract getTransferBuilder(): any;
    /**
     * Returns a proper builder for the given encoded transaction
     *
     * @param {Uint8Array | string | DeployUtil.Deploy} raw - Encoded transaction in hex string or Uint8Array format
     */
    abstract from(raw: Uint8Array | string | DeployUtil.Deploy): any;
}
//# sourceMappingURL=baseTransactionBuilderFactory.d.ts.map