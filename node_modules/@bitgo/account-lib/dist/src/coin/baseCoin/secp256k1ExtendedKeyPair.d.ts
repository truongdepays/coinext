/// <reference types="node" />
import * as bip32 from 'bip32';
import { ECPair } from 'bitcoinjs-lib';
import { KeyPairOptions, ExtendedKeys } from './iface';
import { BaseKeyPair } from './baseKeyPair';
import { AddressFormat } from './enum';
/**
 * Base class for SECP256K1 extended keypairs.
 */
export declare abstract class Secp256k1ExtendedKeyPair implements BaseKeyPair {
    static toKeyPair(hdNode: bip32.BIP32Interface): ECPair.ECPairInterface;
    protected hdNode?: bip32.BIP32Interface;
    protected keyPair: ECPair.ECPairInterface;
    protected source?: KeyPairOptions;
    /**
     * Public constructor. By default, creates a key pair with a random master seed.
     *
     * @param {KeyPairOptions} source Either a master seed, a private key (extended or raw), or a public key
     *     (extended, compressed, or uncompressed)
     */
    protected constructor(source?: KeyPairOptions);
    /**
     * @param compressed
     * @return Buffer 33 bytes if `compressed` is set, 65 bytes otherwise. Standard libsecp256k1 format.
     */
    getPublicKey({ compressed }: {
        compressed: boolean;
    }): Buffer;
    /**
     * @return Buffer 32 bytes in standard libsecp256k1 format
     */
    getPrivateKey(): Buffer | undefined;
    /**
     * Build a Hierarchical Deterministic node or an ECPair from a private key.
     *
     * @param {string} prv An extended or raw private key
     */
    recordKeysFromPrivateKey(prv: string): void;
    /**
     * Build a Hierarchical Deterministic node or an ECPair from a public key.
     *
     * @param {string} pub - An extended, compressed, or uncompressed public key
     */
    recordKeysFromPublicKey(pub: string): void;
    /**
     * Get the extended public key, and the private key if one is available. This is only possible
     * when the key pair was created from a seed or extended keys.
     *
     * @returns {ExtendedKeys} The Extended keys object
     */
    getExtendedKeys(): ExtendedKeys;
    getAddress(format?: AddressFormat): string;
    getKeys(): any;
}
//# sourceMappingURL=secp256k1ExtendedKeyPair.d.ts.map