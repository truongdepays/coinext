import { CoinFamily } from './base';
export declare enum NetworkType {
    MAINNET = "mainnet",
    TESTNET = "testnet"
}
export declare abstract class BaseNetwork {
    abstract readonly name: string;
    abstract readonly type: NetworkType;
    abstract readonly family: CoinFamily;
    abstract readonly explorerUrl: string | undefined;
}
export interface UtxoNetwork extends BaseNetwork {
    utxolibName: string;
}
export interface AccountNetwork extends BaseNetwork {
    readonly accountExplorerUrl?: string;
}
/**
 * Specification name type of the chain. Used in setting up the registry
 */
export declare type PolkadotSpecNameType = 'kusama' | 'polkadot' | 'westend' | 'statemint' | 'statemine';
export interface DotNetwork extends AccountNetwork {
    readonly specName: PolkadotSpecNameType;
    readonly genesisHash: string;
    readonly specVersion: number;
    readonly chainName: string;
    readonly metadataRpc: `0x${string}`;
    readonly txVersion: number;
}
export interface EthereumNetwork extends AccountNetwork {
    readonly chainId: number;
    readonly batcherContractAddress?: string;
    readonly forwarderFactoryAddress?: string;
    readonly forwarderImplementationAddress?: string;
}
export interface TronNetwork extends AccountNetwork {
    maxFeeLimit: string;
    contractCallFeeLimit: string;
}
export interface StacksNetwork extends AccountNetwork {
    readonly sendmanymemoContractAddress: string;
    readonly stakingContractAddress: string;
}
export interface OfcNetwork extends BaseNetwork {
}
declare abstract class Mainnet extends BaseNetwork {
    type: NetworkType;
}
declare abstract class Testnet extends BaseNetwork {
    type: NetworkType;
}
declare class Algorand extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class AlgorandTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class AvalancheC extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class AvalancheCTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class Bitcoin extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinCash extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinCashTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinABC extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinABCTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: undefined;
}
declare class BitcoinSV extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinSVTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: undefined;
}
declare class BitcoinGold extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class BitcoinGoldTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: undefined;
}
declare class Dash extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class DashTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class Polkadot extends Mainnet implements DotNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    specName: PolkadotSpecNameType;
    genesisHash: string;
    specVersion: number;
    chainName: string;
    metadataRpc: `0x${string}`;
    txVersion: number;
}
declare class PolkadotTestnet extends Testnet implements DotNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    specName: PolkadotSpecNameType;
    genesisHash: string;
    specVersion: number;
    chainName: string;
    metadataRpc: `0x${string}`;
    txVersion: number;
}
declare class Celo extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class CeloTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class Casper extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class CasperTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class Ethereum extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    batcherContractAddress: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
}
declare class Ethereum2 extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class Pyrmont extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class Kovan extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    batcherContractAddress: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
}
declare class Goerli extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
    batcherContractAddress: string;
    forwarderFactoryAddress: string;
    forwarderImplementationAddress: string;
}
declare class EthereumClassic extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class EthereumClassicTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class Eos extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class EosTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Hedera extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class HederaTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Litecoin extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class LitecoinTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class Ofc extends Mainnet implements OfcNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class OfcTestnet extends Testnet implements OfcNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class Rbtc extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class RbtcTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class Stellar extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class StellarTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Sol extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class SolTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Stx extends Mainnet implements StacksNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    sendmanymemoContractAddress: string;
    stakingContractAddress: string;
}
declare class StxTestnet extends Testnet implements StacksNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    sendmanymemoContractAddress: string;
    stakingContractAddress: string;
}
declare class SUSD extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class SUSDTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class FiatTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class Fiat extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: undefined;
}
declare class Trx extends Mainnet implements TronNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    maxFeeLimit: string;
    contractCallFeeLimit: string;
}
declare class TrxTestnet extends Testnet implements TronNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    maxFeeLimit: string;
    contractCallFeeLimit: string;
}
declare class Xrp extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class XrpTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class Xtz extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class XtzTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
}
declare class ZCash extends Mainnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class ZCashTestnet extends Testnet implements UtxoNetwork {
    name: string;
    family: CoinFamily;
    utxolibName: string;
    explorerUrl: string;
}
declare class Near extends Mainnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class NearTestnet extends Testnet implements AccountNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
}
declare class MaticL extends Mainnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
declare class MaticLTestnet extends Testnet implements EthereumNetwork {
    name: string;
    family: CoinFamily;
    explorerUrl: string;
    accountExplorerUrl: string;
    chainId: number;
}
export declare const Networks: {
    main: {
        algorand: Readonly<Algorand>;
        avalancheC: Readonly<AvalancheC>;
        bitcoin: Readonly<Bitcoin>;
        bitcoinCash: Readonly<BitcoinCash>;
        bitcoinABC: Readonly<BitcoinABC>;
        bitcoinGold: Readonly<BitcoinGold>;
        bitcoinSV: Readonly<BitcoinSV>;
        casper: Readonly<Casper>;
        celo: Readonly<Celo>;
        dash: Readonly<Dash>;
        dot: Readonly<Polkadot>;
        eos: Readonly<Eos>;
        ethereum: Readonly<Ethereum>;
        ethereum2: Readonly<Ethereum2>;
        ethereumClassic: Readonly<EthereumClassic>;
        fiat: Readonly<Fiat>;
        hedera: Readonly<Hedera>;
        litecoin: Readonly<Litecoin>;
        maticl: Readonly<MaticL>;
        ofc: Readonly<Ofc>;
        rbtc: Readonly<Rbtc>;
        stellar: Readonly<Stellar>;
        sol: Readonly<Sol>;
        near: Readonly<Near>;
        stx: Readonly<Stx>;
        susd: Readonly<SUSD>;
        trx: Readonly<Trx>;
        xrp: Readonly<Xrp>;
        xtz: Readonly<Xtz>;
        zCash: Readonly<ZCash>;
    };
    test: {
        algorand: Readonly<AlgorandTestnet>;
        avalancheC: Readonly<AvalancheCTestnet>;
        bitcoin: Readonly<BitcoinTestnet>;
        bitcoinCash: Readonly<BitcoinCashTestnet>;
        bitcoinGold: Readonly<BitcoinGoldTestnet>;
        bitcoinABC: Readonly<BitcoinABCTestnet>;
        bitcoinSV: Readonly<BitcoinSVTestnet>;
        casper: Readonly<CasperTestnet>;
        celo: Readonly<CeloTestnet>;
        dash: Readonly<DashTestnet>;
        dot: Readonly<PolkadotTestnet>;
        eos: Readonly<EosTestnet>;
        fiat: Readonly<FiatTestnet>;
        pyrmont: Readonly<Pyrmont>;
        ethereumClassicTestnet: Readonly<EthereumClassicTestnet>;
        hedera: Readonly<HederaTestnet>;
        kovan: Readonly<Kovan>;
        goerli: Readonly<Goerli>;
        litecoin: Readonly<LitecoinTestnet>;
        maticl: Readonly<MaticLTestnet>;
        ofc: Readonly<OfcTestnet>;
        rbtc: Readonly<RbtcTestnet>;
        stellar: Readonly<StellarTestnet>;
        sol: Readonly<SolTestnet>;
        near: Readonly<NearTestnet>;
        stx: Readonly<StxTestnet>;
        susd: Readonly<SUSDTestnet>;
        trx: Readonly<TrxTestnet>;
        xrp: Readonly<XrpTestnet>;
        xtz: Readonly<XtzTestnet>;
        zCash: Readonly<ZCashTestnet>;
    };
};
export {};
//# sourceMappingURL=networks.d.ts.map