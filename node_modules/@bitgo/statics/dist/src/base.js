"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseCoin = exports.KeyCurve = exports.UnderlyingAsset = exports.CoinFeature = exports.CoinFamily = exports.CoinKind = void 0;
const errors_1 = require("./errors");
var CoinKind;
(function (CoinKind) {
    CoinKind["CRYPTO"] = "crypto";
    CoinKind["FIAT"] = "fiat";
})(CoinKind = exports.CoinKind || (exports.CoinKind = {}));
/**
 * The coin family links related variants of a single coin together.
 *
 * Typically, each coin will have a testnet and mainnet variant,
 * and these will both have the same coin family.
 *
 * For example, the coins `btc` and `tbtc` both belong to the same family, `btc`.
 */
var CoinFamily;
(function (CoinFamily) {
    CoinFamily["ALGO"] = "algo";
    CoinFamily["AVAXC"] = "avaxc";
    CoinFamily["BCH"] = "bch";
    CoinFamily["BCHA"] = "bcha";
    CoinFamily["BSV"] = "bsv";
    CoinFamily["BTC"] = "btc";
    CoinFamily["BTG"] = "btg";
    CoinFamily["CELO"] = "celo";
    CoinFamily["CSPR"] = "cspr";
    CoinFamily["DASH"] = "dash";
    CoinFamily["DOT"] = "dot";
    CoinFamily["ETH"] = "eth";
    CoinFamily["ETH2"] = "eth2";
    CoinFamily["ETC"] = "etc";
    CoinFamily["EOS"] = "eos";
    CoinFamily["FIAT"] = "fiat";
    CoinFamily["HBAR"] = "hbar";
    CoinFamily["LTC"] = "ltc";
    CoinFamily["MATICL"] = "maticl";
    CoinFamily["NEAR"] = "near";
    CoinFamily["OFC"] = "ofc";
    CoinFamily["RBTC"] = "rbtc";
    CoinFamily["SOL"] = "sol";
    CoinFamily["STX"] = "stx";
    CoinFamily["SUSD"] = "susd";
    CoinFamily["TRX"] = "trx";
    CoinFamily["XLM"] = "xlm";
    CoinFamily["XRP"] = "xrp";
    CoinFamily["XTZ"] = "xtz";
    CoinFamily["ZEC"] = "zec";
})(CoinFamily = exports.CoinFamily || (exports.CoinFamily = {}));
/**
 * Coin features are yes or no questions about what a coin requires or is capable of.
 *
 * This allows coin-agnostic handling of coin-specific features. This is designed
 * to replace checking the coin name against a whitelist of supported coins
 * before executing some coin-specific logic, and instead allows one to check if a
 * coin supports the coin-specific feature that the logic implements.
 */
var CoinFeature;
(function (CoinFeature) {
    /*
     * The valueless transfer feature indicates that it is valid to send a transaction which moves zero units of the coin.
     *
     * An example is Ethereum, which uses zero value transactions to trigger contract calls.
     */
    CoinFeature["VALUELESS_TRANSFER"] = "valueless-transfer";
    /*
     * Transaction data means there can be arbitrary data encoded in a transaction.
     *
     * Ethereum contract call data is an example.
     */
    CoinFeature["TRANSACTION_DATA"] = "transaction-data";
    /*
     * Some coins have a higher precision range than IEEE 754 doubles, which are used to represent numbers in javascript.
     *
     * For these coins, we must use an arbitrary precision arithmetic library, and this feature indicates this requirement.
     */
    CoinFeature["REQUIRES_BIG_NUMBER"] = "requires-big-number";
    /*
     * RMG requires all wallets to have a backup key held by a BitGo approved Key Recovery Service (KRS)
     */
    CoinFeature["REQUIRES_KRS_BACKUP_KEY"] = "requires-krs-backup-key";
    /*
     * For customers which are not on a postpaid contract, we add an extra output to transactions which pays BitGo a fee.
     *
     * This fee is known as the "pay-as-you-go fee", or just "paygo" for short.
     *
     * Some coins are unable to create transactions with more than one output, so paygo outputs are not possible for these coins.
     */
    CoinFeature["PAYGO"] = "paygo";
    /*
     * Does this coin align with the unspent model?
     *
     * These are typically Bitcoin and forks of it, such as Litecoin and Bitcoin Cash.
     */
    CoinFeature["UNSPENT_MODEL"] = "unspent-model";
    /*
     * Does this coin align with the account model?
     *
     * Examples of this coin type are Ethereum, XRP, and Stellar
     */
    CoinFeature["ACCOUNT_MODEL"] = "account-model";
    /*
     * Does this coin support child-pays-for-parent transactions?
     *
     * These are special types of transactions which can accelerate the confirmation time
     * of another transaction which is stuck in the mempool due to low fees.
     *
     * This is only possible for coins which follow the unspent model (UTXO coins).
     */
    CoinFeature["CHILD_PAYS_FOR_PARENT"] = "cpfp";
    /*
     * Does this coin support tokens? These are distinct assets from the underlying coin, but run on the same network.
     *
     * For example, Ethereum's ERC 20 token standard means that it supports tokens, so it shall have this feature.
     */
    CoinFeature["SUPPORTS_TOKENS"] = "supports-tokens";
    /*
     * Are fees for transactions of this coin paid for by the Enterprise (eg, Enterprise gas tank)?
     */
    CoinFeature["ENTERPRISE_PAYS_FEES"] = "enterprise-pays-fees";
    /*
     * This coin requires that accounts keep a minimum balance as reserve
     */
    CoinFeature["REQUIRES_RESERVE"] = "requires-reserve";
    /**
     * This coin supports custodial wallet types
     */
    CoinFeature["CUSTODY"] = "custody";
})(CoinFeature = exports.CoinFeature || (exports.CoinFeature = {}));
/**
 * Some coins are representations of another underlying asset class. An example
 * is Wrapped Bitcoin, which represents Bitcoin on the Ethereum blockchain.
 *
 * For these coins, the `UnderlyingAsset` provides a link to the actual
 * asset for which the coin is a unit of account.
 */
var UnderlyingAsset;
(function (UnderlyingAsset) {
    UnderlyingAsset["ALGO"] = "algo";
    UnderlyingAsset["APE"] = "ape";
    UnderlyingAsset["AVAXC"] = "avaxc";
    UnderlyingAsset["AXL"] = "AXL";
    UnderlyingAsset["BCH"] = "bch";
    UnderlyingAsset["BCHA"] = "bcha";
    UnderlyingAsset["BSV"] = "bsv";
    UnderlyingAsset["BTC"] = "btc";
    UnderlyingAsset["BTG"] = "btg";
    UnderlyingAsset["DASH"] = "dash";
    UnderlyingAsset["DOT"] = "dot";
    UnderlyingAsset["CELO"] = "celo";
    UnderlyingAsset["CSPR"] = "cspr";
    UnderlyingAsset["USD"] = "usd";
    UnderlyingAsset["FIAT"] = "fiat";
    UnderlyingAsset["ETH"] = "eth";
    UnderlyingAsset["ETH2"] = "eth2";
    UnderlyingAsset["GTETH"] = "gteth";
    UnderlyingAsset["ETC"] = "etc";
    UnderlyingAsset["EOS"] = "eos";
    UnderlyingAsset["HBAR"] = "hbar";
    UnderlyingAsset["LTC"] = "ltc";
    UnderlyingAsset["MATICL"] = "maticl";
    UnderlyingAsset["NEAR"] = "near";
    UnderlyingAsset["RBTC"] = "rbtc";
    UnderlyingAsset["SOL"] = "sol";
    UnderlyingAsset["STX"] = "stx";
    UnderlyingAsset["TRX"] = "trx";
    UnderlyingAsset["XRP"] = "xrp";
    UnderlyingAsset["XLM"] = "xlm";
    UnderlyingAsset["XTZ"] = "xtz";
    UnderlyingAsset["ZEC"] = "zec";
    // ERC 20 tokens
    UnderlyingAsset["1INCH"] = "1inch";
    UnderlyingAsset["1UP"] = "1up";
    UnderlyingAsset["AAVE"] = "aave";
    UnderlyingAsset["ABT"] = "abt";
    UnderlyingAsset["ACE"] = "ace";
    UnderlyingAsset["ACXT"] = "acxt";
    UnderlyingAsset["ACH"] = "ach";
    UnderlyingAsset["AE"] = "ae";
    UnderlyingAsset["AERGO"] = "aergo";
    UnderlyingAsset["AERGO1"] = "aergo1";
    UnderlyingAsset["AGWD"] = "agwd";
    UnderlyingAsset["AION"] = "aion";
    UnderlyingAsset["ALI"] = "ali";
    UnderlyingAsset["ALPHA"] = "alpha";
    UnderlyingAsset["AMN"] = "amn";
    UnderlyingAsset["AMO"] = "amo";
    UnderlyingAsset["AMP"] = "amp";
    UnderlyingAsset["AMON"] = "amon";
    UnderlyingAsset["AMPX"] = "ampx";
    UnderlyingAsset["ANA"] = "ana";
    UnderlyingAsset["ANT"] = "ant";
    UnderlyingAsset["ANTV2"] = "antv2";
    UnderlyingAsset["AOA"] = "aoa";
    UnderlyingAsset["APPC"] = "appc";
    UnderlyingAsset["AQT"] = "aqt";
    UnderlyingAsset["ARCT"] = "arct";
    UnderlyingAsset["ARCX"] = "arcx";
    UnderlyingAsset["AST"] = "ast";
    UnderlyingAsset["ATRI"] = "atri";
    UnderlyingAsset["AUDIO"] = "audio";
    UnderlyingAsset["AUDX"] = "audx";
    UnderlyingAsset["AUST"] = "aust";
    UnderlyingAsset["AXPR"] = "axpr";
    UnderlyingAsset["AXS"] = "axs";
    UnderlyingAsset["AXSV2"] = "axsv2";
    UnderlyingAsset["BADGER"] = "badger";
    UnderlyingAsset["BAL"] = "bal";
    UnderlyingAsset["BAND"] = "band";
    UnderlyingAsset["BASIC"] = "basic";
    UnderlyingAsset["BAT"] = "bat";
    UnderlyingAsset["BAX"] = "bax";
    UnderlyingAsset["BBX"] = "bbx";
    UnderlyingAsset["BCAP"] = "bcap";
    UnderlyingAsset["BCC"] = "bcc";
    UnderlyingAsset["BCIO"] = "bcio";
    UnderlyingAsset["BED"] = "bed";
    UnderlyingAsset["BEPRO"] = "bepro";
    UnderlyingAsset["BICO"] = "bico";
    UnderlyingAsset["BID"] = "bid";
    UnderlyingAsset["BIDL"] = "bidl";
    UnderlyingAsset["BIRD"] = "bird";
    UnderlyingAsset["BIT"] = "bit";
    UnderlyingAsset["BNK"] = "bnk";
    UnderlyingAsset["BNL"] = "bnl";
    UnderlyingAsset["BNT"] = "bnt";
    UnderlyingAsset["BNTY"] = "bnty";
    UnderlyingAsset["BOND"] = "bond";
    UnderlyingAsset["BLOCKS"] = "blocks";
    UnderlyingAsset["BOX"] = "box";
    UnderlyingAsset["BRD"] = "brd";
    UnderlyingAsset["BRZ"] = "brz";
    UnderlyingAsset["BST"] = "bst";
    UnderlyingAsset["BSX"] = "bsx";
    UnderlyingAsset["BTRST"] = "btrst";
    UnderlyingAsset["BTT"] = "btt";
    UnderlyingAsset["BTU"] = "btu";
    UnderlyingAsset["BURP"] = "burp";
    UnderlyingAsset["BUSD"] = "busd";
    UnderlyingAsset["BUY"] = "buy";
    UnderlyingAsset["BXX"] = "bxx";
    UnderlyingAsset["BXXV1"] = "bxxv1";
    UnderlyingAsset["BZZ"] = "bzz";
    UnderlyingAsset["C8P"] = "c8p";
    UnderlyingAsset["CACXT"] = "cacxt";
    UnderlyingAsset["CADX"] = "cadx";
    UnderlyingAsset["CAG"] = "cag";
    UnderlyingAsset["CBAT"] = "cbat";
    UnderlyingAsset["CBC"] = "cbc";
    UnderlyingAsset["CBRL"] = "cbrl";
    UnderlyingAsset["CCT"] = "cct";
    UnderlyingAsset["CDAG"] = "cdag";
    UnderlyingAsset["CDAI"] = "cdai";
    UnderlyingAsset["CDT"] = "cdt";
    UnderlyingAsset["CEL"] = "cel";
    UnderlyingAsset["CELR"] = "celr";
    UnderlyingAsset["CFX"] = "cfx";
    UnderlyingAsset["CETH"] = "ceth";
    UnderlyingAsset["CHFX"] = "chfx";
    UnderlyingAsset["CHSB"] = "chsb";
    UnderlyingAsset["CHZ"] = "chz";
    UnderlyingAsset["CIX100"] = "cix100";
    UnderlyingAsset["CLIQ"] = "cliq";
    UnderlyingAsset["CLN"] = "cln";
    UnderlyingAsset["CLT"] = "clt";
    UnderlyingAsset["CLV"] = "clv";
    UnderlyingAsset["CNG"] = "cng";
    UnderlyingAsset["CNYX"] = "cnyx";
    UnderlyingAsset["COMP"] = "comp";
    UnderlyingAsset["COVER"] = "cover";
    UnderlyingAsset["CPAY"] = "cpay";
    UnderlyingAsset["CPLT"] = "cplt";
    UnderlyingAsset["CQT"] = "cqt";
    UnderlyingAsset["CQX"] = "cqx";
    UnderlyingAsset["CRDT"] = "crdt";
    UnderlyingAsset["CRE"] = "cre";
    UnderlyingAsset["CREAM"] = "cream";
    UnderlyingAsset["CREP"] = "crep";
    UnderlyingAsset["CRO"] = "cro";
    UnderlyingAsset["CRV"] = "crv";
    UnderlyingAsset["CRPT"] = "crpt";
    UnderlyingAsset["CRPT1"] = "crpt1";
    UnderlyingAsset["CSLV"] = "cslv";
    UnderlyingAsset["CSP"] = "csp";
    UnderlyingAsset["CTSI"] = "ctsi";
    UnderlyingAsset["CUSD"] = "cusd";
    UnderlyingAsset["CUSDC"] = "cusdc";
    UnderlyingAsset["CWBTC"] = "cwbtc";
    UnderlyingAsset["CVC"] = "cvc";
    UnderlyingAsset["CVX"] = "cvx";
    UnderlyingAsset["CZRX"] = "czrx";
    UnderlyingAsset["DACXI"] = "dacxi";
    UnderlyingAsset["DAI"] = "dai";
    UnderlyingAsset["DAO"] = "dao";
    UnderlyingAsset["DATA"] = "data";
    UnderlyingAsset["DATAV2"] = "datav2";
    UnderlyingAsset["DATAECON"] = "dataecon";
    UnderlyingAsset["DEC"] = "dec";
    UnderlyingAsset["DENT"] = "dent";
    UnderlyingAsset["DEP"] = "dep";
    UnderlyingAsset["DEXA"] = "dexa";
    UnderlyingAsset["DFD"] = "dfd";
    UnderlyingAsset["DFI"] = "dfi";
    UnderlyingAsset["DGCL"] = "dgcl";
    UnderlyingAsset["DGD"] = "dgd";
    UnderlyingAsset["DGX"] = "dgx";
    UnderlyingAsset["DIGG"] = "digg";
    UnderlyingAsset["DMT"] = "dmt";
    UnderlyingAsset["DODO"] = "dodo";
    UnderlyingAsset["DPI"] = "dpi";
    UnderlyingAsset["DRPU"] = "drpu";
    UnderlyingAsset["DRV"] = "drv";
    UnderlyingAsset["DUC"] = "duc";
    UnderlyingAsset["DX1U"] = "dx1u";
    UnderlyingAsset["DXGT"] = "dxgt";
    UnderlyingAsset["DXPT"] = "dxpt";
    UnderlyingAsset["DXST"] = "dxst";
    UnderlyingAsset["DYDX"] = "dydx";
    UnderlyingAsset["DYN"] = "dyn";
    UnderlyingAsset["EASY"] = "easy";
    UnderlyingAsset["EBTCQ"] = "ebtcq";
    UnderlyingAsset["ECHT"] = "echt";
    UnderlyingAsset["EDISON"] = "edison";
    UnderlyingAsset["EDN"] = "edn";
    UnderlyingAsset["EDR"] = "edr";
    UnderlyingAsset["EFI"] = "efi";
    UnderlyingAsset["EGL"] = "egl";
    UnderlyingAsset["EGLD"] = "egld";
    UnderlyingAsset["EGOLD"] = "egold";
    UnderlyingAsset["ELF"] = "elf";
    UnderlyingAsset["EMX"] = "emx";
    UnderlyingAsset["ENG"] = "eng";
    UnderlyingAsset["ENJ"] = "enj";
    UnderlyingAsset["ENS"] = "ens";
    UnderlyingAsset["EQO"] = "eqo";
    UnderlyingAsset["ETA"] = "eta";
    UnderlyingAsset["ETHOS"] = "ethos";
    UnderlyingAsset["ETV"] = "etv";
    UnderlyingAsset["EURS"] = "eurs";
    UnderlyingAsset["EURST"] = "eurst";
    UnderlyingAsset["EURT"] = "eurt";
    UnderlyingAsset["EURX"] = "eurx";
    UnderlyingAsset["EUX"] = "eux";
    UnderlyingAsset["EVX"] = "evx";
    UnderlyingAsset["EXE"] = "exe";
    UnderlyingAsset["FEI"] = "fei";
    UnderlyingAsset["FET"] = "fet";
    UnderlyingAsset["FET1"] = "fet1";
    UnderlyingAsset["FDT"] = "fdt";
    UnderlyingAsset["FF1"] = "ff1";
    UnderlyingAsset["FFT"] = "fft";
    UnderlyingAsset["FIRE"] = "fire";
    UnderlyingAsset["FIXED"] = "fixed";
    UnderlyingAsset["FMF"] = "fmf";
    UnderlyingAsset["FORTH"] = "forth";
    UnderlyingAsset["FTM"] = "ftm";
    UnderlyingAsset["FTT"] = "ftt";
    UnderlyingAsset["FUN"] = "fun";
    UnderlyingAsset["FWB"] = "fwb";
    UnderlyingAsset["FXRT"] = "fxrt";
    UnderlyingAsset["FXS"] = "fxs";
    UnderlyingAsset["GAL"] = "gal";
    UnderlyingAsset["GALA"] = "gala";
    UnderlyingAsset["GAMMA"] = "gamma";
    UnderlyingAsset["GBPX"] = "gbpx";
    UnderlyingAsset["GDT"] = "gdt";
    UnderlyingAsset["GEC"] = "gec";
    UnderlyingAsset["GEN"] = "gen";
    UnderlyingAsset["GHUB"] = "ghub";
    UnderlyingAsset["GIGDROP"] = "gigdrop";
    UnderlyingAsset["GLDX"] = "gldx";
    UnderlyingAsset["GLM"] = "glm";
    UnderlyingAsset["GNO"] = "gno";
    UnderlyingAsset["GNT"] = "gnt";
    UnderlyingAsset["GODS"] = "gods";
    UnderlyingAsset["GOG"] = "gog";
    UnderlyingAsset["GOLD"] = "gold";
    UnderlyingAsset["GOT"] = "got";
    UnderlyingAsset["GRT"] = "grt";
    UnderlyingAsset["GTAAVE18DP"] = "gtaave18dp";
    UnderlyingAsset["GTBAT18DP"] = "gtbat18dp";
    UnderlyingAsset["GTCOMP18DP"] = "gtcomp18dp";
    UnderlyingAsset["GTGRT18DP"] = "gtgrt18dp";
    UnderlyingAsset["GTLINK18DP"] = "gtlink18dp";
    UnderlyingAsset["GTMKR18DP"] = "gtmkr18dp";
    UnderlyingAsset["GTSNX18DP"] = "gtsnx18dp";
    UnderlyingAsset["GTUNI18DP"] = "gtuni18dp";
    UnderlyingAsset["GTUSDT6DP"] = "gtusdt6dp";
    UnderlyingAsset["GTYFI18DP"] = "gtyfi18dp";
    UnderlyingAsset["GTWBTC8DP"] = "gtwbtc8dp";
    UnderlyingAsset["GTO"] = "gto";
    UnderlyingAsset["GTERC2DP"] = "gterc2dp";
    UnderlyingAsset["GTERC6DP"] = "gterc6dp";
    UnderlyingAsset["GTERC18DP"] = "gterc18dp";
    UnderlyingAsset["GUSD"] = "gusd";
    UnderlyingAsset["GUSDT"] = "gusdt";
    UnderlyingAsset["GXC"] = "gxc";
    UnderlyingAsset["GYEN"] = "gyen";
    UnderlyingAsset["HCN"] = "hcn";
    UnderlyingAsset["HDO"] = "hdo";
    UnderlyingAsset["HEDG"] = "hedg";
    UnderlyingAsset["HKDX"] = "hkdx";
    UnderlyingAsset["HLC"] = "hlc";
    UnderlyingAsset["HMT"] = "hmt";
    UnderlyingAsset["HOLD"] = "hold";
    UnderlyingAsset["HOT"] = "hot";
    UnderlyingAsset["HQT"] = "hqt";
    UnderlyingAsset["HST"] = "hst";
    UnderlyingAsset["HT"] = "ht";
    UnderlyingAsset["HUM"] = "hum";
    UnderlyingAsset["HXRO"] = "hxro";
    UnderlyingAsset["HYB"] = "hyb";
    UnderlyingAsset["HYDRO"] = "hydro";
    UnderlyingAsset["I8"] = "i8";
    UnderlyingAsset["IDEX"] = "idex";
    UnderlyingAsset["IDRC"] = "idrc";
    UnderlyingAsset["IDRT"] = "idrt";
    UnderlyingAsset["IMX"] = "imx";
    UnderlyingAsset["IMXV2"] = "imxv2";
    UnderlyingAsset["INCX"] = "incx";
    UnderlyingAsset["IND"] = "ind";
    UnderlyingAsset["INDEX"] = "index";
    UnderlyingAsset["INF"] = "inf";
    UnderlyingAsset["INJ"] = "inj";
    UnderlyingAsset["INJV2"] = "injv2";
    UnderlyingAsset["INST"] = "inst";
    UnderlyingAsset["INX"] = "inx";
    UnderlyingAsset["ISF"] = "isf";
    UnderlyingAsset["ISR"] = "isr";
    UnderlyingAsset["IVO"] = "ivo";
    UnderlyingAsset["IVY"] = "ivy";
    UnderlyingAsset["JBC"] = "jbc";
    UnderlyingAsset["JFIN"] = "jfin";
    UnderlyingAsset["JPYX"] = "jpyx";
    UnderlyingAsset["KEEP"] = "keep";
    UnderlyingAsset["KEY"] = "key";
    UnderlyingAsset["KIN"] = "kin";
    UnderlyingAsset["KIRO"] = "kiro";
    UnderlyingAsset["KNC"] = "knc";
    UnderlyingAsset["KNC2"] = "knc2";
    UnderlyingAsset["KOIN"] = "koin";
    UnderlyingAsset["KOZ"] = "koz";
    UnderlyingAsset["KP3R"] = "kp3r";
    UnderlyingAsset["KZE"] = "kze";
    UnderlyingAsset["LAYER"] = "layer";
    UnderlyingAsset["LBA"] = "lba";
    UnderlyingAsset["LEND"] = "lend";
    UnderlyingAsset["LEO"] = "leo";
    UnderlyingAsset["LGO"] = "lgo";
    UnderlyingAsset["LINK"] = "link";
    UnderlyingAsset["LION"] = "lion";
    UnderlyingAsset["LNC"] = "lnc";
    UnderlyingAsset["LOOKS"] = "looks";
    UnderlyingAsset["LOOM"] = "loom";
    UnderlyingAsset["LOOM1"] = "loom1";
    UnderlyingAsset["LRC"] = "lrc";
    UnderlyingAsset["LRCV2"] = "lrcv2";
    UnderlyingAsset["LYN"] = "lyn";
    UnderlyingAsset["MANA"] = "mana";
    UnderlyingAsset["MAPS"] = "maps";
    UnderlyingAsset["MATIC"] = "matic";
    UnderlyingAsset["MCAU"] = "mcau";
    UnderlyingAsset["MCDAI"] = "mcdai";
    UnderlyingAsset["MCO"] = "mco";
    UnderlyingAsset["MCS"] = "mcs";
    UnderlyingAsset["MCX"] = "mcx";
    UnderlyingAsset["MDFC"] = "mdfc";
    UnderlyingAsset["MDX"] = "mdx";
    UnderlyingAsset["MEDX"] = "medx";
    UnderlyingAsset["MEME"] = "meme";
    UnderlyingAsset["MET"] = "met";
    UnderlyingAsset["META"] = "meta";
    UnderlyingAsset["MFG"] = "mfg";
    UnderlyingAsset["MFPH"] = "mfph";
    UnderlyingAsset["MFT"] = "mft";
    UnderlyingAsset["MILKV2"] = "milkv2";
    UnderlyingAsset["MIR"] = "mir";
    UnderlyingAsset["MITH"] = "mith";
    UnderlyingAsset["MIX"] = "mix";
    UnderlyingAsset["MIZN"] = "mizn";
    UnderlyingAsset["MKR"] = "mkr";
    UnderlyingAsset["MNS"] = "mns";
    UnderlyingAsset["MNDE"] = "mnde";
    UnderlyingAsset["MOC"] = "moc";
    UnderlyingAsset["MOF"] = "mof";
    UnderlyingAsset["MPAY"] = "mpay";
    UnderlyingAsset["MPL"] = "mpl";
    UnderlyingAsset["MTCN"] = "mtcn";
    UnderlyingAsset["MTL"] = "mtl";
    UnderlyingAsset["MUSD"] = "musd";
    UnderlyingAsset["MVL"] = "mvl";
    UnderlyingAsset["MVI"] = "mvi";
    UnderlyingAsset["NAS"] = "nas";
    UnderlyingAsset["NCT"] = "nct";
    UnderlyingAsset["NDX"] = "ndx";
    UnderlyingAsset["NEU"] = "neu";
    UnderlyingAsset["NEXO"] = "nexo";
    UnderlyingAsset["NFTX"] = "nftx";
    UnderlyingAsset["NGNT"] = "ngnt";
    UnderlyingAsset["NIAX"] = "niax";
    UnderlyingAsset["NMR"] = "nmr";
    UnderlyingAsset["NPXS"] = "npxs";
    UnderlyingAsset["NS2DRP"] = "ns2drp";
    UnderlyingAsset["NU"] = "nu";
    UnderlyingAsset["NYM"] = "nym";
    UnderlyingAsset["NZDX"] = "nzdx";
    UnderlyingAsset["OCEAN"] = "ocean";
    UnderlyingAsset["OCEANV2"] = "oceanv2";
    UnderlyingAsset["OGN"] = "ogn";
    UnderlyingAsset["OM"] = "om";
    UnderlyingAsset["OMG"] = "omg";
    UnderlyingAsset["ONL"] = "onl";
    UnderlyingAsset["OPT"] = "opt";
    UnderlyingAsset["ORAI"] = "orai";
    UnderlyingAsset["ORBS"] = "orbs";
    UnderlyingAsset["ORCA"] = "orca";
    UnderlyingAsset["OXT"] = "oxt";
    UnderlyingAsset["OXY"] = "oxy";
    UnderlyingAsset["OHM"] = "ohm";
    UnderlyingAsset["SD"] = "sd";
    UnderlyingAsset["SOHM"] = "sohm";
    UnderlyingAsset["GOHM"] = "gohm";
    UnderlyingAsset["PAR"] = "par";
    UnderlyingAsset["PASS"] = "pass";
    UnderlyingAsset["PAU"] = "pau";
    UnderlyingAsset["PAX"] = "pax";
    UnderlyingAsset["PAXG"] = "paxg";
    UnderlyingAsset["PAY"] = "pay";
    UnderlyingAsset["PBCH"] = "pbch";
    UnderlyingAsset["PDATA"] = "pdata";
    UnderlyingAsset["PBTC"] = "pbtc";
    UnderlyingAsset["PEG"] = "peg";
    UnderlyingAsset["PERP"] = "perp";
    UnderlyingAsset["PETH"] = "peth";
    UnderlyingAsset["PHNX"] = "phnx";
    UnderlyingAsset["PIE"] = "pie";
    UnderlyingAsset["PLC"] = "plc";
    UnderlyingAsset["PFCT"] = "pfct";
    UnderlyingAsset["PLANET"] = "planet";
    UnderlyingAsset["PLNX"] = "plnx";
    UnderlyingAsset["PLX"] = "plx";
    UnderlyingAsset["PMA"] = "pma";
    UnderlyingAsset["POLY"] = "poly";
    UnderlyingAsset["POWR"] = "powr";
    UnderlyingAsset["PPT"] = "ppt";
    UnderlyingAsset["PRDX"] = "prdx";
    UnderlyingAsset["PRINTS"] = "prints";
    UnderlyingAsset["PRO"] = "pro";
    UnderlyingAsset["PRTS"] = "prts";
    UnderlyingAsset["PSTAKE"] = "pstake";
    UnderlyingAsset["PUNDIX"] = "pundix";
    UnderlyingAsset["PUSD"] = "pusd";
    UnderlyingAsset["PXP"] = "pxp";
    UnderlyingAsset["QASH"] = "qash";
    UnderlyingAsset["QCAD"] = "qcad";
    UnderlyingAsset["QUICK"] = "quick";
    UnderlyingAsset["QDT"] = "qdt";
    UnderlyingAsset["QNT"] = "qnt";
    UnderlyingAsset["QRDO"] = "qrdo";
    UnderlyingAsset["QRL"] = "qrl";
    UnderlyingAsset["QSP"] = "qsp";
    UnderlyingAsset["QVT"] = "qvt";
    UnderlyingAsset["RAD"] = "rad";
    UnderlyingAsset["RCOIN"] = "rcoin";
    UnderlyingAsset["RARE"] = "rare";
    UnderlyingAsset["RARI"] = "rari";
    UnderlyingAsset["RAY"] = "ray";
    UnderlyingAsset["RBY"] = "rby";
    UnderlyingAsset["RDN"] = "rdn";
    UnderlyingAsset["REB"] = "reb";
    UnderlyingAsset["REBL"] = "rebl";
    UnderlyingAsset["REEF"] = "reef";
    UnderlyingAsset["REP"] = "rep";
    UnderlyingAsset["REPV2"] = "repv2";
    UnderlyingAsset["RFR"] = "rfr";
    UnderlyingAsset["RFUEL"] = "rfuel";
    UnderlyingAsset["RGT"] = "rgt";
    UnderlyingAsset["RIF"] = "rif";
    UnderlyingAsset["RINGX"] = "ringx";
    UnderlyingAsset["RLC"] = "rlc";
    UnderlyingAsset["RLY"] = "rly";
    UnderlyingAsset["RNDR"] = "rndr";
    UnderlyingAsset["ROOK"] = "rook";
    UnderlyingAsset["RONC"] = "ronc";
    UnderlyingAsset["ROOBEE"] = "roobee";
    UnderlyingAsset["RUBX"] = "rubx";
    UnderlyingAsset["RUEDATK"] = "ruedatk";
    UnderlyingAsset["SALT"] = "salt";
    UnderlyingAsset["SAND"] = "sand";
    UnderlyingAsset["SASHIMI"] = "sashimi";
    UnderlyingAsset["SGA"] = "sga";
    UnderlyingAsset["SGDX"] = "sgdx";
    UnderlyingAsset["SGR"] = "sgr";
    UnderlyingAsset["SHK"] = "shk";
    UnderlyingAsset["SHOPX"] = "shopx";
    UnderlyingAsset["SHIB"] = "shib";
    UnderlyingAsset["SHR"] = "shr";
    UnderlyingAsset["SIH"] = "sih";
    UnderlyingAsset["SILV"] = "silv";
    UnderlyingAsset["SKALE"] = "skale";
    UnderlyingAsset["SLAB"] = "slab";
    UnderlyingAsset["SLND"] = "slnd";
    UnderlyingAsset["SLOT"] = "slot";
    UnderlyingAsset["SLP"] = "slp";
    UnderlyingAsset["SLVX"] = "slvx";
    UnderlyingAsset["SNC"] = "snc";
    UnderlyingAsset["SNOV"] = "snov";
    UnderlyingAsset["SNT"] = "snt";
    UnderlyingAsset["SNX"] = "snx";
    UnderlyingAsset["SOC"] = "soc";
    UnderlyingAsset["SPO"] = "spo";
    UnderlyingAsset["SOLVE"] = "solve";
    UnderlyingAsset["SRNT"] = "srnt";
    UnderlyingAsset["SRM"] = "srm";
    UnderlyingAsset["STBU"] = "stbu";
    UnderlyingAsset["STC"] = "stc";
    UnderlyingAsset["STCV2"] = "stcv2";
    UnderlyingAsset["STKAAVE"] = "stkaave";
    UnderlyingAsset["STORE"] = "store";
    UnderlyingAsset["STORJ"] = "storj";
    UnderlyingAsset["STORM"] = "storm";
    UnderlyingAsset["STZEN"] = "stzen";
    UnderlyingAsset["SUSHI"] = "sushi";
    UnderlyingAsset["SQUIG"] = "squig";
    UnderlyingAsset["SXP"] = "sxp";
    UnderlyingAsset["THRESHOLD"] = "threshold";
    UnderlyingAsset["TAUD"] = "taud";
    UnderlyingAsset["TBTC1"] = "tbtc1";
    UnderlyingAsset["TCAD"] = "tcad";
    UnderlyingAsset["TCO"] = "tco";
    UnderlyingAsset["TEL"] = "tel";
    UnderlyingAsset["TEN"] = "ten";
    UnderlyingAsset["TENX"] = "tenx";
    UnderlyingAsset["TERC"] = "terc";
    UnderlyingAsset["TERC2DP"] = "terc2dp";
    UnderlyingAsset["TERC6DP"] = "terc6dp";
    UnderlyingAsset["TERC18DP"] = "terc18DP";
    UnderlyingAsset["TERC20"] = "terc20";
    UnderlyingAsset["TGBP"] = "tgbp";
    UnderlyingAsset["THKD"] = "thkd";
    UnderlyingAsset["TIOX"] = "tiox";
    UnderlyingAsset["TKNT"] = "tknt";
    UnderlyingAsset["TKX"] = "tkx";
    UnderlyingAsset["TLAB"] = "tlab";
    UnderlyingAsset["TNT"] = "tnt";
    UnderlyingAsset["TOK"] = "tok";
    UnderlyingAsset["TRAXX"] = "traxx";
    UnderlyingAsset["TRIBE"] = "tribe";
    UnderlyingAsset["TRL"] = "trl";
    UnderlyingAsset["TRST"] = "trst";
    UnderlyingAsset["TRU"] = "tru";
    UnderlyingAsset["TRYB"] = "tryb";
    UnderlyingAsset["TRYX"] = "tryx";
    UnderlyingAsset["TUSD"] = "tusd";
    UnderlyingAsset["TXL"] = "txl";
    UnderlyingAsset["UAIR"] = "uair";
    UnderlyingAsset["UCO"] = "uco";
    UnderlyingAsset["UKG"] = "ukg";
    UnderlyingAsset["UMA"] = "uma";
    UnderlyingAsset["UMEE"] = "umee";
    UnderlyingAsset["UNB"] = "unb";
    UnderlyingAsset["UNI"] = "uni";
    UnderlyingAsset["UP"] = "up";
    UnderlyingAsset["UPBTC"] = "upbtc";
    UnderlyingAsset["UPP"] = "upp";
    UnderlyingAsset["UPT"] = "upt";
    UnderlyingAsset["UPUSD"] = "upusd";
    UnderlyingAsset["UQC"] = "uqc";
    UnderlyingAsset["URHD"] = "urhd";
    UnderlyingAsset["USDC"] = "usdc";
    // Also available on EOS
    UnderlyingAsset["USDT"] = "usdt";
    UnderlyingAsset["USDX"] = "usdx";
    UnderlyingAsset["USG"] = "usg";
    UnderlyingAsset["USPX"] = "uspx";
    UnderlyingAsset["UST"] = "ust";
    UnderlyingAsset["USX"] = "usx";
    UnderlyingAsset["UTK"] = "utk";
    UnderlyingAsset["UTK1"] = "utk1";
    UnderlyingAsset["VALOR"] = "valor";
    UnderlyingAsset["VDX"] = "vdx";
    UnderlyingAsset["VEGA"] = "vega";
    UnderlyingAsset["VISR"] = "visr";
    UnderlyingAsset["VRGX"] = "vrgx";
    UnderlyingAsset["VXC"] = "vxc";
    UnderlyingAsset["VSP"] = "vsp";
    UnderlyingAsset["WAFL"] = "wafl";
    UnderlyingAsset["WAX"] = "wax";
    UnderlyingAsset["WABI"] = "wabi";
    UnderlyingAsset["WTK"] = "wtk";
    UnderlyingAsset["WBTC"] = "wbtc";
    UnderlyingAsset["WCFG"] = "wcfg";
    UnderlyingAsset["WEC"] = "wec";
    UnderlyingAsset["WET"] = "wet";
    UnderlyingAsset["WETH"] = "weth";
    UnderlyingAsset["WHALE"] = "whale";
    UnderlyingAsset["WHT"] = "wht";
    UnderlyingAsset["WILD"] = "wild";
    UnderlyingAsset["WNXM"] = "wnxm";
    UnderlyingAsset["WLUNA"] = "wluna";
    UnderlyingAsset["WSTETH"] = "wsteth";
    UnderlyingAsset["WPX"] = "wpx";
    UnderlyingAsset["WTC"] = "wtc";
    UnderlyingAsset["WXRP"] = "wxrp";
    UnderlyingAsset["WXT"] = "wxt";
    UnderlyingAsset["XAUD"] = "xaud";
    UnderlyingAsset["XBGOLD"] = "xbgold";
    UnderlyingAsset["XCD"] = "xcd";
    UnderlyingAsset["XEX"] = "xex";
    UnderlyingAsset["XRL"] = "xrl";
    UnderlyingAsset["XSGD"] = "xsgd";
    UnderlyingAsset["XSUSHI"] = "xsushi";
    UnderlyingAsset["XTP"] = "xtp";
    UnderlyingAsset["YFDAI"] = "yfdai";
    UnderlyingAsset["YFI"] = "yfi";
    UnderlyingAsset["YFII"] = "yfii";
    UnderlyingAsset["YGG"] = "ygg";
    UnderlyingAsset["YLD"] = "yld";
    UnderlyingAsset["YNG"] = "yng";
    UnderlyingAsset["YSEY"] = "ysey";
    UnderlyingAsset["ZARX"] = "zarx";
    UnderlyingAsset["ZCO"] = "zco";
    UnderlyingAsset["ZIL"] = "zil";
    UnderlyingAsset["ZIX"] = "zix";
    UnderlyingAsset["ZLW"] = "zlw";
    UnderlyingAsset["ZMT"] = "zmt";
    UnderlyingAsset["ZOOM"] = "zoom";
    UnderlyingAsset["ZRX"] = "zrx";
    UnderlyingAsset["ZUSD"] = "zusd";
    UnderlyingAsset["xlm:BST-GADDFE4R72YUP2AOEL67OHZN3GJQYPC3VE734N2XFMEGRR2L32CZ3XYZ"] = "xlm:BST-GADDFE4R72YUP2AOEL67OHZN3GJQYPC3VE734N2XFMEGRR2L32CZ3XYZ";
    UnderlyingAsset["xlm:VELO-GDM4RQUQQUVSKQA7S6EM7XBZP3FCGH4Q7CL6TABQ7B2BEJ5ERARM2M5M"] = "xlm:VELO-GDM4RQUQQUVSKQA7S6EM7XBZP3FCGH4Q7CL6TABQ7B2BEJ5ERARM2M5M";
    UnderlyingAsset["xlm:SLT-GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP"] = "xlm:SLT-GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP";
    UnderlyingAsset["xlm:USD-GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX"] = "xlm:USD-GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX";
    UnderlyingAsset["xlm:ETH-GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5"] = "xlm:ETH-GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5";
    UnderlyingAsset["xlm:WXT-GASBLVHS5FOABSDNW5SPPH3QRJYXY5JHA2AOA2QHH2FJLZBRXSG4SWXT"] = "xlm:WXT-GASBLVHS5FOABSDNW5SPPH3QRJYXY5JHA2AOA2QHH2FJLZBRXSG4SWXT";
    UnderlyingAsset["xlm:USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN"] = "xlm:USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN";
    UnderlyingAsset["xlm:SIX-GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z"] = "xlm:SIX-GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z";
    UnderlyingAsset["xlm:BRLT-GCHQ3F2BF5P74DMDNOOGHT5DUCKC773AW5DTOFINC26W4KGYFPYDPRSO"] = "xlm:BRLT-GCHQ3F2BF5P74DMDNOOGHT5DUCKC773AW5DTOFINC26W4KGYFPYDPRSO";
    UnderlyingAsset["xlm:ARST-GCSAZVWXZKWS4XS223M5F54H2B6XPIIXZZGP7KEAIU6YSL5HDRGCI3DG"] = "xlm:ARST-GCSAZVWXZKWS4XS223M5F54H2B6XPIIXZZGP7KEAIU6YSL5HDRGCI3DG";
    UnderlyingAsset["xlm:AQUA-GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA"] = "xlm:AQUA-GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA";
    // Algorand mainnet tokens
    UnderlyingAsset["algo:31566704"] = "algo:31566704";
    UnderlyingAsset["algo:312769"] = "algo:312769";
    UnderlyingAsset["algo:6547014"] = "algo:6547014";
    // Kovan-only ERC20 tokens
    UnderlyingAsset["TEST"] = "test";
    UnderlyingAsset["SCHZ"] = "schz";
    UnderlyingAsset["CAT"] = "cat";
    // Stellar testnet tokens
    UnderlyingAsset["txlm:BST-GBQTIOS3XGHB7LVYGBKQVJGCZ3R4JL5E4CBSWJ5ALIJUHBKS6263644L"] = "txlm:BST-GBQTIOS3XGHB7LVYGBKQVJGCZ3R4JL5E4CBSWJ5ALIJUHBKS6263644L";
    UnderlyingAsset["txlm:TST-GBQTIOS3XGHB7LVYGBKQVJGCZ3R4JL5E4CBSWJ5ALIJUHBKS6263644L"] = "txlm:TST-GBQTIOS3XGHB7LVYGBKQVJGCZ3R4JL5E4CBSWJ5ALIJUHBKS6263644L";
    // Algorand testnet tokens
    UnderlyingAsset["talgo:16026728"] = "talgo:16026728";
    UnderlyingAsset["talgo:16026732"] = "talgo:16026732";
    UnderlyingAsset["talgo:16026733"] = "talgo:16026733";
    UnderlyingAsset["talgo:10458941"] = "talgo:10458941";
    UnderlyingAsset["talgo:180447"] = "talgo:180447";
    // EOS tokens
    UnderlyingAsset["CHEX"] = "chex";
    UnderlyingAsset["IQ"] = "iq";
    UnderlyingAsset["EOS_BOX"] = "eos:box";
    // Avax Token ERC-20
    UnderlyingAsset["avaxc:qi"] = "avaxc:qi";
    UnderlyingAsset["avaxc:xava"] = "avaxc:xava";
    UnderlyingAsset["avaxc:klo"] = "avaxc:klo";
    UnderlyingAsset["avaxc:joe"] = "avaxc:joe";
    UnderlyingAsset["avaxc:png"] = "avaxc:png";
    UnderlyingAsset["avaxc:usdt"] = "avaxc:usdt";
    UnderlyingAsset["avaxc:usdc"] = "avaxc:usdc";
    UnderlyingAsset["avaxc:link"] = "avaxc:link";
    UnderlyingAsset["ERC721"] = "erc721";
    UnderlyingAsset["ERC1155"] = "erc1155";
})(UnderlyingAsset = exports.UnderlyingAsset || (exports.UnderlyingAsset = {}));
/**
 * This is the curve BitGo signs against with the user, backup and BitGo key.
 */
var KeyCurve;
(function (KeyCurve) {
    KeyCurve["Secp256k1"] = "secp256k1";
    KeyCurve["Ed25519"] = "ed25519";
    KeyCurve["BLS"] = "bls";
})(KeyCurve = exports.KeyCurve || (exports.KeyCurve = {}));
class BaseCoin {
    constructor(options) {
        this.validateOptions(options);
        this.fullName = options.fullName;
        this.name = options.name;
        this.alias = options.alias;
        this.prefix = options.prefix;
        this.suffix = options.suffix;
        this.kind = options.kind;
        this.family = options.network.family;
        this.isToken = options.isToken;
        this.features = options.features;
        this.decimalPlaces = options.decimalPlaces;
        this.asset = options.asset;
        this.network = options.network;
        this.primaryKeyCurve = options.primaryKeyCurve;
    }
    /**
     * Ensures that the base coin constructor was passed a valid set of options.
     *
     * This includes checking that:
     * - All coin features of the new instance are allowed by the coin class
     * - No features required by the coin class are missing from the new instance
     * @param {BaseCoinConstructorOptions} options
     * @throws {DisallowedCoinFeatureError} if any of the coin features are not allowed for the coin class
     * @throws {MissingRequiredCoinFeatureError} if any features required by the coin class are missing
     */
    validateOptions(options) {
        const requiredFeatures = this.requiredFeatures();
        const disallowedFeatures = this.disallowedFeatures();
        const intersectionFeatures = Array.from(requiredFeatures).filter((feat) => disallowedFeatures.has(feat));
        if (intersectionFeatures.length > 0) {
            throw new errors_1.ConflictingCoinFeaturesError(options.name, intersectionFeatures);
        }
        for (const feature of options.features) {
            if (disallowedFeatures.has(feature)) {
                throw new errors_1.DisallowedCoinFeatureError(options.name, feature);
            }
            if (requiredFeatures.has(feature)) {
                requiredFeatures.delete(feature);
            }
        }
        if (requiredFeatures.size > 0) {
            // some required features were missing
            throw new errors_1.MissingRequiredCoinFeatureError(options.name, Array.from(requiredFeatures));
        }
    }
}
exports.BaseCoin = BaseCoin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9iYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHFDQUFxSDtBQUdySCxJQUFZLFFBR1g7QUFIRCxXQUFZLFFBQVE7SUFDbEIsNkJBQWlCLENBQUE7SUFDakIseUJBQWEsQ0FBQTtBQUNmLENBQUMsRUFIVyxRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQUduQjtBQUVEOzs7Ozs7O0dBT0c7QUFDSCxJQUFZLFVBK0JYO0FBL0JELFdBQVksVUFBVTtJQUNwQiwyQkFBYSxDQUFBO0lBQ2IsNkJBQWUsQ0FBQTtJQUNmLHlCQUFXLENBQUE7SUFDWCwyQkFBYSxDQUFBO0lBQ2IseUJBQVcsQ0FBQTtJQUNYLHlCQUFXLENBQUE7SUFDWCx5QkFBVyxDQUFBO0lBQ1gsMkJBQWEsQ0FBQTtJQUNiLDJCQUFhLENBQUE7SUFDYiwyQkFBYSxDQUFBO0lBQ2IseUJBQVcsQ0FBQTtJQUNYLHlCQUFXLENBQUE7SUFDWCwyQkFBYSxDQUFBO0lBQ2IseUJBQVcsQ0FBQTtJQUNYLHlCQUFXLENBQUE7SUFDWCwyQkFBYSxDQUFBO0lBQ2IsMkJBQWEsQ0FBQTtJQUNiLHlCQUFXLENBQUE7SUFDWCwrQkFBaUIsQ0FBQTtJQUNqQiwyQkFBYSxDQUFBO0lBQ2IseUJBQVcsQ0FBQTtJQUNYLDJCQUFhLENBQUE7SUFDYix5QkFBVyxDQUFBO0lBQ1gseUJBQVcsQ0FBQTtJQUNYLDJCQUFhLENBQUE7SUFDYix5QkFBVyxDQUFBO0lBQ1gseUJBQVcsQ0FBQTtJQUNYLHlCQUFXLENBQUE7SUFDWCx5QkFBVyxDQUFBO0lBQ1gseUJBQVcsQ0FBQTtBQUNiLENBQUMsRUEvQlcsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUErQnJCO0FBRUQ7Ozs7Ozs7R0FPRztBQUNILElBQVksV0FzRVg7QUF0RUQsV0FBWSxXQUFXO0lBQ3JCOzs7O09BSUc7SUFDSCx3REFBeUMsQ0FBQTtJQUN6Qzs7OztPQUlHO0lBQ0gsb0RBQXFDLENBQUE7SUFDckM7Ozs7T0FJRztJQUNILDBEQUEyQyxDQUFBO0lBQzNDOztPQUVHO0lBQ0gsa0VBQW1ELENBQUE7SUFDbkQ7Ozs7OztPQU1HO0lBQ0gsOEJBQWUsQ0FBQTtJQUNmOzs7O09BSUc7SUFDSCw4Q0FBK0IsQ0FBQTtJQUMvQjs7OztPQUlHO0lBQ0gsOENBQStCLENBQUE7SUFDL0I7Ozs7Ozs7T0FPRztJQUNILDZDQUE4QixDQUFBO0lBQzlCOzs7O09BSUc7SUFDSCxrREFBbUMsQ0FBQTtJQUNuQzs7T0FFRztJQUNILDREQUE2QyxDQUFBO0lBQzdDOztPQUVHO0lBQ0gsb0RBQXFDLENBQUE7SUFDckM7O09BRUc7SUFDSCxrQ0FBbUIsQ0FBQTtBQUNyQixDQUFDLEVBdEVXLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBc0V0QjtBQUVEOzs7Ozs7R0FNRztBQUNILElBQVksZUFtb0JYO0FBbm9CRCxXQUFZLGVBQWU7SUFDekIsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCxrQ0FBZSxDQUFBO0lBQ2YsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYixrQ0FBZSxDQUFBO0lBQ2YsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLG9DQUFpQixDQUFBO0lBQ2pCLGdDQUFhLENBQUE7SUFDYixnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUVYLGdCQUFnQjtJQUNoQixrQ0FBaUIsQ0FBQTtJQUNqQiw4QkFBYSxDQUFBO0lBQ2IsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCw0QkFBUyxDQUFBO0lBQ1Qsa0NBQWUsQ0FBQTtJQUNmLG9DQUFpQixDQUFBO0lBQ2pCLGdDQUFhLENBQUE7SUFDYixnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLGtDQUFlLENBQUE7SUFDZiw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsa0NBQWUsQ0FBQTtJQUNmLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYixnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYixrQ0FBZSxDQUFBO0lBQ2YsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYixnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLGtDQUFlLENBQUE7SUFDZixvQ0FBaUIsQ0FBQTtJQUNqQiw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLGtDQUFlLENBQUE7SUFDZiw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsa0NBQWUsQ0FBQTtJQUNmLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYixvQ0FBaUIsQ0FBQTtJQUNqQiw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLGtDQUFlLENBQUE7SUFDZiw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYixnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCxrQ0FBZSxDQUFBO0lBQ2YsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCxrQ0FBZSxDQUFBO0lBQ2YsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYixnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLG9DQUFpQixDQUFBO0lBQ2pCLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYixrQ0FBZSxDQUFBO0lBQ2YsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsa0NBQWUsQ0FBQTtJQUNmLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsOEJB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SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCxrQ0FBZSxDQUFBO0lBQ2YsZ0NBQWEsQ0FBQTtJQUNiLGtDQUFlLENBQUE7SUFDZiw4QkFBVyxDQUFBO0lBQ1gsa0NBQWUsQ0FBQTtJQUNmLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsZ0NBQWEsQ0FBQTtJQUNiLGtDQUFlLENBQUE7SUFDZixnQ0FBYSxDQUFBO0lBQ2Isa0NBQWUsQ0FBQTtJQUNmLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLG9DQUFpQixDQUFBO0lBQ2pCLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2IsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYixnQ0FBYSxDQUFBO0lBQ2IsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lB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SSxDQUFDLGtCQUFrQixFQUFFLENBQUM7UUFFckQsTUFBTSxvQkFBb0IsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUV6RyxJQUFJLG9CQUFvQixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDbkMsTUFBTSxJQUFJLHFDQUE0QixDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztTQUM1RTtRQUVELEtBQUssTUFBTSxPQUFPLElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRTtZQUN0QyxJQUFJLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsRUFBRTtnQkFDbkMsTUFBTSxJQUFJLG1DQUEwQixDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7YUFDN0Q7WUFFRCxJQUFJLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsRUFBRTtnQkFDakMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQ2xDO1NBQ0Y7UUFFRCxJQUFJLGdCQUFnQixDQUFDLElBQUksR0FBRyxDQUFDLEVBQUU7WUFDN0Isc0NBQXNDO1lBQ3RDLE1BQU0sSUFBSSx3Q0FBK0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1NBQ3ZGO0lBQ0gsQ0FBQztDQW1CRjtBQXZHRCw0QkF1R0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25mbGljdGluZ0NvaW5GZWF0dXJlc0Vycm9yLCBEaXNhbGxvd2VkQ29pbkZlYXR1cmVFcnJvciwgTWlzc2luZ1JlcXVpcmVkQ29pbkZlYXR1cmVFcnJvciB9IGZyb20gJy4vZXJyb3JzJztcbmltcG9ydCB7IEJhc2VOZXR3b3JrIH0gZnJvbSAnLi9uZXR3b3Jrcyc7XG5cbmV4cG9ydCBlbnVtIENvaW5LaW5kIHtcbiAgQ1JZUFRPID0gJ2NyeXB0bycsXG4gIEZJQVQgPSAnZmlhdCcsXG59XG5cbi8qKlxuICogVGhlIGNvaW4gZmFtaWx5IGxpbmtzIHJlbGF0ZWQgdmFyaWFudHMgb2YgYSBzaW5nbGUgY29pbiB0b2dldGhlci5cbiAqXG4gKiBUeXBpY2FsbHksIGVhY2ggY29pbiB3aWxsIGhhdmUgYSB0ZXN0bmV0IGFuZCBtYWlubmV0IHZhcmlhbnQsXG4gKiBhbmQgdGhlc2Ugd2lsbCBib3RoIGhhdmUgdGhlIHNhbWUgY29pbiBmYW1pbHkuXG4gKlxuICogRm9yIGV4YW1wbGUsIHRoZSBjb2lucyBgYnRjYCBhbmQgYHRidGNgIGJvdGggYmVsb25nIHRvIHRoZSBzYW1lIGZhbWlseSwgYGJ0Y2AuXG4gKi9cbmV4cG9ydCBlbnVtIENvaW5GYW1pbHkge1xuICBBTEdPID0gJ2FsZ28nLFxuICBBVkFYQyA9ICdhdmF4YycsXG4gIEJDSCA9ICdiY2gnLFxuICBCQ0hBID0gJ2JjaGEnLFxuICBCU1YgPSAnYnN2JyxcbiAgQlRDID0gJ2J0YycsXG4gIEJURyA9ICdidGcnLFxuICBDRUxPID0gJ2NlbG8nLFxuICBDU1BSID0gJ2NzcHInLFxuICBEQVNIID0gJ2Rhc2gnLFxuICBET1QgPSAnZG90JyxcbiAgRVRIID0gJ2V0aCcsXG4gIEVUSDIgPSAnZXRoMicsXG4gIEVUQyA9ICdldGMnLFxuICBFT1MgPSAnZW9zJyxcbiAgRklBVCA9ICdmaWF0JyxcbiAgSEJBUiA9ICdoYmFyJyxcbiAgTFRDID0gJ2x0YycsXG4gIE1BVElDTCA9ICdtYXRpY2wnLFxuICBORUFSID0gJ25lYXInLFxuICBPRkMgPSAnb2ZjJyxcbiAgUkJUQyA9ICdyYnRjJyxcbiAgU09MID0gJ3NvbCcsXG4gIFNUWCA9ICdzdHgnLFxuICBTVVNEID0gJ3N1c2QnLFxuICBUUlggPSAndHJ4JyxcbiAgWExNID0gJ3hsbScsXG4gIFhSUCA9ICd4cnAnLFxuICBYVFogPSAneHR6JyxcbiAgWkVDID0gJ3plYycsXG59XG5cbi8qKlxuICogQ29pbiBmZWF0dXJlcyBhcmUgeWVzIG9yIG5vIHF1ZXN0aW9ucyBhYm91dCB3aGF0IGEgY29pbiByZXF1aXJlcyBvciBpcyBjYXBhYmxlIG9mLlxuICpcbiAqIFRoaXMgYWxsb3dzIGNvaW4tYWdub3N0aWMgaGFuZGxpbmcgb2YgY29pbi1zcGVjaWZpYyBmZWF0dXJlcy4gVGhpcyBpcyBkZXNpZ25lZFxuICogdG8gcmVwbGFjZSBjaGVja2luZyB0aGUgY29pbiBuYW1lIGFnYWluc3QgYSB3aGl0ZWxpc3Qgb2Ygc3VwcG9ydGVkIGNvaW5zXG4gKiBiZWZvcmUgZXhlY3V0aW5nIHNvbWUgY29pbi1zcGVjaWZpYyBsb2dpYywgYW5kIGluc3RlYWQgYWxsb3dzIG9uZSB0byBjaGVjayBpZiBhXG4gKiBjb2luIHN1cHBvcnRzIHRoZSBjb2luLXNwZWNpZmljIGZlYXR1cmUgdGhhdCB0aGUgbG9naWMgaW1wbGVtZW50cy5cbiAqL1xuZXhwb3J0IGVudW0gQ29pbkZlYXR1cmUge1xuICAvKlxuICAgKiBUaGUgdmFsdWVsZXNzIHRyYW5zZmVyIGZlYXR1cmUgaW5kaWNhdGVzIHRoYXQgaXQgaXMgdmFsaWQgdG8gc2VuZCBhIHRyYW5zYWN0aW9uIHdoaWNoIG1vdmVzIHplcm8gdW5pdHMgb2YgdGhlIGNvaW4uXG4gICAqXG4gICAqIEFuIGV4YW1wbGUgaXMgRXRoZXJldW0sIHdoaWNoIHVzZXMgemVybyB2YWx1ZSB0cmFuc2FjdGlvbnMgdG8gdHJpZ2dlciBjb250cmFjdCBjYWxscy5cbiAgICovXG4gIFZBTFVFTEVTU19UUkFOU0ZFUiA9ICd2YWx1ZWxlc3MtdHJhbnNmZXInLFxuICAvKlxuICAgKiBUcmFuc2FjdGlvbiBkYXRhIG1lYW5zIHRoZXJlIGNhbiBiZSBhcmJpdHJhcnkgZGF0YSBlbmNvZGVkIGluIGEgdHJhbnNhY3Rpb24uXG4gICAqXG4gICAqIEV0aGVyZXVtIGNvbnRyYWN0IGNhbGwgZGF0YSBpcyBhbiBleGFtcGxlLlxuICAgKi9cbiAgVFJBTlNBQ1RJT05fREFUQSA9ICd0cmFuc2FjdGlvbi1kYXRhJyxcbiAgLypcbiAgICogU29tZSBjb2lucyBoYXZlIGEgaGlnaGVyIHByZWNpc2lvbiByYW5nZSB0aGFuIElFRUUgNzU0IGRvdWJsZXMsIHdoaWNoIGFyZSB1c2VkIHRvIHJlcHJlc2VudCBudW1iZXJzIGluIGphdmFzY3JpcHQuXG4gICAqXG4gICAqIEZvciB0aGVzZSBjb2lucywgd2UgbXVzdCB1c2UgYW4gYXJiaXRyYXJ5IHByZWNpc2lvbiBhcml0aG1ldGljIGxpYnJhcnksIGFuZCB0aGlzIGZlYXR1cmUgaW5kaWNhdGVzIHRoaXMgcmVxdWlyZW1lbnQuXG4gICAqL1xuICBSRVFVSVJFU19CSUdfTlVNQkVSID0gJ3JlcXVpcmVzLWJpZy1udW1iZXInLFxuICAvKlxuICAgKiBSTUcgcmVxdWlyZXMgYWxsIHdhbGxldHMgdG8gaGF2ZSBhIGJhY2t1cCBrZXkgaGVsZCBieSBhIEJpdEdvIGFwcHJvdmVkIEtleSBSZWNvdmVyeSBTZXJ2aWNlIChLUlMpXG4gICAqL1xuICBSRVFVSVJFU19LUlNfQkFDS1VQX0tFWSA9ICdyZXF1aXJlcy1rcnMtYmFja3VwLWtleScsXG4gIC8qXG4gICAqIEZvciBjdXN0b21lcnMgd2hpY2ggYXJlIG5vdCBvbiBhIHBvc3RwYWlkIGNvbnRyYWN0LCB3ZSBhZGQgYW4gZXh0cmEgb3V0cHV0IHRvIHRyYW5zYWN0aW9ucyB3aGljaCBwYXlzIEJpdEdvIGEgZmVlLlxuICAgKlxuICAgKiBUaGlzIGZlZSBpcyBrbm93biBhcyB0aGUgXCJwYXktYXMteW91LWdvIGZlZVwiLCBvciBqdXN0IFwicGF5Z29cIiBmb3Igc2hvcnQuXG4gICAqXG4gICAqIFNvbWUgY29pbnMgYXJlIHVuYWJsZSB0byBjcmVhdGUgdHJhbnNhY3Rpb25zIHdpdGggbW9yZSB0aGFuIG9uZSBvdXRwdXQsIHNvIHBheWdvIG91dHB1dHMgYXJlIG5vdCBwb3NzaWJsZSBmb3IgdGhlc2UgY29pbnMuXG4gICAqL1xuICBQQVlHTyA9ICdwYXlnbycsXG4gIC8qXG4gICAqIERvZXMgdGhpcyBjb2luIGFsaWduIHdpdGggdGhlIHVuc3BlbnQgbW9kZWw/XG4gICAqXG4gICAqIFRoZXNlIGFyZSB0eXBpY2FsbHkgQml0Y29pbiBhbmQgZm9ya3Mgb2YgaXQsIHN1Y2ggYXMgTGl0ZWNvaW4gYW5kIEJpdGNvaW4gQ2FzaC5cbiAgICovXG4gIFVOU1BFTlRfTU9ERUwgPSAndW5zcGVudC1tb2RlbCcsXG4gIC8qXG4gICAqIERvZXMgdGhpcyBjb2luIGFsaWduIHdpdGggdGhlIGFjY291bnQgbW9kZWw/XG4gICAqXG4gICAqIEV4YW1wbGVzIG9mIHRoaXMgY29pbiB0eXBlIGFyZSBFdGhlcmV1bSwgWFJQLCBhbmQgU3RlbGxhclxuICAgKi9cbiAgQUNDT1VOVF9NT0RFTCA9ICdhY2NvdW50LW1vZGVsJyxcbiAgLypcbiAgICogRG9lcyB0aGlzIGNvaW4gc3VwcG9ydCBjaGlsZC1wYXlzLWZvci1wYXJlbnQgdHJhbnNhY3Rpb25zP1xuICAgKlxuICAgKiBUaGVzZSBhcmUgc3BlY2lhbCB0eXBlcyBvZiB0cmFuc2FjdGlvbnMgd2hpY2ggY2FuIGFjY2VsZXJhdGUgdGhlIGNvbmZpcm1hdGlvbiB0aW1lXG4gICAqIG9mIGFub3RoZXIgdHJhbnNhY3Rpb24gd2hpY2ggaXMgc3R1Y2sgaW4gdGhlIG1lbXBvb2wgZHVlIHRvIGxvdyBmZWVzLlxuICAgKlxuICAgKiBUaGlzIGlzIG9ubHkgcG9zc2libGUgZm9yIGNvaW5zIHdoaWNoIGZvbGxvdyB0aGUgdW5zcGVudCBtb2RlbCAoVVRYTyBjb2lucykuXG4gICAqL1xuICBDSElMRF9QQVlTX0ZPUl9QQVJFTlQgPSAnY3BmcCcsXG4gIC8qXG4gICAqIERvZXMgdGhpcyBjb2luIHN1cHBvcnQgdG9rZW5zPyBUaGVzZSBhcmUgZGlzdGluY3QgYXNzZXRzIGZyb20gdGhlIHVuZGVybHlpbmcgY29pbiwgYnV0IHJ1biBvbiB0aGUgc2FtZSBuZXR3b3JrLlxuICAgKlxuICAgKiBGb3IgZXhhbXBsZSwgRXRoZXJldW0ncyBFUkMgMjAgdG9rZW4gc3RhbmRhcmQgbWVhbnMgdGhhdCBpdCBzdXBwb3J0cyB0b2tlbnMsIHNvIGl0IHNoYWxsIGhhdmUgdGhpcyBmZWF0dXJlLlxuICAgKi9cbiAgU1VQUE9SVFNfVE9LRU5TID0gJ3N1cHBvcnRzLXRva2VucycsXG4gIC8qXG4gICAqIEFyZSBmZWVzIGZvciB0cmFuc2FjdGlvbnMgb2YgdGhpcyBjb2luIHBhaWQgZm9yIGJ5IHRoZSBFbnRlcnByaXNlIChlZywgRW50ZXJwcmlzZSBnYXMgdGFuayk/XG4gICAqL1xuICBFTlRFUlBSSVNFX1BBWVNfRkVFUyA9ICdlbnRlcnByaXNlLXBheXMtZmVlcycsXG4gIC8qXG4gICAqIFRoaXMgY29pbiByZXF1aXJlcyB0aGF0IGFjY291bnRzIGtlZXAgYSBtaW5pbXVtIGJhbGFuY2UgYXMgcmVzZXJ2ZVxuICAgKi9cbiAgUkVRVUlSRVNfUkVTRVJWRSA9ICdyZXF1aXJlcy1yZXNlcnZlJyxcbiAgLyoqXG4gICAqIFRoaXMgY29pbiBzdXBwb3J0cyBjdXN0b2RpYWwgd2FsbGV0IHR5cGVzXG4gICAqL1xuICBDVVNUT0RZID0gJ2N1c3RvZHknLFxufVxuXG4vKipcbiAqIFNvbWUgY29pbnMgYXJlIHJlcHJlc2VudGF0aW9ucyBvZiBhbm90aGVyIHVuZGVybHlpbmcgYXNzZXQgY2xhc3MuIEFuIGV4YW1wbGVcbiAqIGlzIFdyYXBwZWQgQml0Y29pbiwgd2hpY2ggcmVwcmVzZW50cyBCaXRjb2luIG9uIHRoZSBFdGhlcmV1bSBibG9ja2NoYWluLlxuICpcbiAqIEZvciB0aGVzZSBjb2lucywgdGhlIGBVbmRlcmx5aW5nQXNzZXRgIHByb3ZpZGVzIGEgbGluayB0byB0aGUgYWN0dWFsXG4gKiBhc3NldCBmb3Igd2hpY2ggdGhlIGNvaW4gaXMgYSB1bml0IG9mIGFjY291bnQuXG4gKi9cbmV4cG9ydCBlbnVtIFVuZGVybHlpbmdBc3NldCB7XG4gIEFMR08gPSAnYWxnbycsXG4gIEFQRSA9ICdhcGUnLFxuICBBVkFYQyA9ICdhdmF4YycsXG4gIEFYTCA9ICdBWEwnLFxuICBCQ0ggPSAnYmNoJyxcbiAgQkNIQSA9ICdiY2hhJyxcbiAgQlNWID0gJ2JzdicsXG4gIEJUQyA9ICdidGMnLFxuICBCVEcgPSAnYnRnJyxcbiAgREFTSCA9ICdkYXNoJyxcbiAgRE9UID0gJ2RvdCcsXG4gIENFTE8gPSAnY2VsbycsIC8vIENlbG8gbWFpbiBjb2luXG4gIENTUFIgPSAnY3NwcicsXG4gIFVTRCA9ICd1c2QnLFxuICBGSUFUID0gJ2ZpYXQnLFxuICBFVEggPSAnZXRoJyxcbiAgRVRIMiA9ICdldGgyJyxcbiAgR1RFVEggPSAnZ3RldGgnLFxuICBFVEMgPSAnZXRjJyxcbiAgRU9TID0gJ2VvcycsXG4gIEhCQVIgPSAnaGJhcicsIC8vIEhlZGVyYSBtYWluIGNvaW5cbiAgTFRDID0gJ2x0YycsXG4gIE1BVElDTCA9ICdtYXRpY2wnLFxuICBORUFSID0gJ25lYXInLFxuICBSQlRDID0gJ3JidGMnLCAvLyBSU0sgbWFpbiBjb2luXG4gIFNPTCA9ICdzb2wnLFxuICBTVFggPSAnc3R4JyxcbiAgVFJYID0gJ3RyeCcsXG4gIFhSUCA9ICd4cnAnLFxuICBYTE0gPSAneGxtJyxcbiAgWFRaID0gJ3h0eicsXG4gIFpFQyA9ICd6ZWMnLFxuXG4gIC8vIEVSQyAyMCB0b2tlbnNcbiAgJzFJTkNIJyA9ICcxaW5jaCcsXG4gICcxVVAnID0gJzF1cCcsXG4gIEFBVkUgPSAnYWF2ZScsXG4gIEFCVCA9ICdhYnQnLFxuICBBQ0UgPSAnYWNlJyxcbiAgQUNYVCA9ICdhY3h0JyxcbiAgQUNIID0gJ2FjaCcsXG4gIEFFID0gJ2FlJyxcbiAgQUVSR08gPSAnYWVyZ28nLFxuICBBRVJHTzEgPSAnYWVyZ28xJyxcbiAgQUdXRCA9ICdhZ3dkJyxcbiAgQUlPTiA9ICdhaW9uJyxcbiAgQUxJID0gJ2FsaScsXG4gIEFMUEhBID0gJ2FscGhhJyxcbiAgQU1OID0gJ2FtbicsXG4gIEFNTyA9ICdhbW8nLFxuICBBTVAgPSAnYW1wJyxcbiAgQU1PTiA9ICdhbW9uJyxcbiAgQU1QWCA9ICdhbXB4JyxcbiAgQU5BID0gJ2FuYScsXG4gIEFOVCA9ICdhbnQnLFxuICBBTlRWMiA9ICdhbnR2MicsXG4gIEFPQSA9ICdhb2EnLFxuICBBUFBDID0gJ2FwcGMnLFxuICBBUVQgPSAnYXF0JyxcbiAgQVJDVCA9ICdhcmN0JyxcbiAgQVJDWCA9ICdhcmN4JyxcbiAgQVNUID0gJ2FzdCcsXG4gIEFUUkkgPSAnYXRyaScsXG4gIEFVRElPID0gJ2F1ZGlvJyxcbiAgQVVEWCA9ICdhdWR4JyxcbiAgQVVTVCA9ICdhdXN0JyxcbiAgQVhQUiA9ICdheHByJyxcbiAgQVhTID0gJ2F4cycsXG4gIEFYU1YyID0gJ2F4c3YyJyxcbiAgQkFER0VSID0gJ2JhZGdlcicsXG4gIEJBTCA9ICdiYWwnLFxuICBCQU5EID0gJ2JhbmQnLFxuICBCQVNJQyA9ICdiYXNpYycsXG4gIEJBVCA9ICdiYXQnLFxuICBCQVggPSAnYmF4JyxcbiAgQkJYID0gJ2JieCcsXG4gIEJDQVAgPSAnYmNhcCcsXG4gIEJDQyA9ICdiY2MnLFxuICBCQ0lPID0gJ2JjaW8nLFxuICBCRUQgPSAnYmVkJyxcbiAgQkVQUk8gPSAnYmVwcm8nLFxuICBCSUNPID0gJ2JpY28nLFxuICBCSUQgPSAnYmlkJyxcbiAgQklETCA9ICdiaWRsJyxcbiAgQklSRCA9ICdiaXJkJyxcbiAgQklUID0gJ2JpdCcsXG4gIEJOSyA9ICdibmsnLFxuICBCTkwgPSAnYm5sJyxcbiAgQk5UID0gJ2JudCcsXG4gIEJOVFkgPSAnYm50eScsXG4gIEJPTkQgPSAnYm9uZCcsXG4gIEJMT0NLUyA9ICdibG9ja3MnLFxuICBCT1ggPSAnYm94JyxcbiAgQlJEID0gJ2JyZCcsXG4gIEJSWiA9ICdicnonLFxuICBCU1QgPSAnYnN0JyxcbiAgQlNYID0gJ2JzeCcsXG4gIEJUUlNUID0gJ2J0cnN0JyxcbiAgQlRUID0gJ2J0dCcsXG4gIEJUVSA9ICdidHUnLFxuICBCVVJQID0gJ2J1cnAnLFxuICBCVVNEID0gJ2J1c2QnLFxuICBCVVkgPSAnYnV5JyxcbiAgQlhYID0gJ2J4eCcsXG4gIEJYWFYxID0gJ2J4eHYxJyxcbiAgQlpaID0gJ2J6eicsXG4gIEM4UCA9ICdjOHAnLFxuICBDQUNYVCA9ICdjYWN4dCcsXG4gIENBRFggPSAnY2FkeCcsXG4gIENBRyA9ICdjYWcnLFxuICBDQkFUID0gJ2NiYXQnLFxuICBDQkMgPSAnY2JjJyxcbiAgQ0JSTCA9ICdjYnJsJyxcbiAgQ0NUID0gJ2NjdCcsXG4gIENEQUcgPSAnY2RhZycsXG4gIENEQUkgPSAnY2RhaScsXG4gIENEVCA9ICdjZHQnLFxuICBDRUwgPSAnY2VsJyxcbiAgQ0VMUiA9ICdjZWxyJyxcbiAgQ0ZYID0gJ2NmeCcsXG4gIENFVEggPSAnY2V0aCcsXG4gIENIRlggPSAnY2hmeCcsXG4gIENIU0IgPSAnY2hzYicsXG4gIENIWiA9ICdjaHonLFxuICBDSVgxMDAgPSAnY2l4MTAwJyxcbiAgQ0xJUSA9ICdjbGlxJyxcbiAgQ0xOID0gJ2NsbicsXG4gIENMVCA9ICdjbHQnLFxuICBDTFYgPSAnY2x2JyxcbiAgQ05HID0gJ2NuZycsXG4gIENOWVggPSAnY255eCcsXG4gIENPTVAgPSAnY29tcCcsXG4gIENPVkVSID0gJ2NvdmVyJyxcbiAgQ1BBWSA9ICdjcGF5JyxcbiAgQ1BMVCA9ICdjcGx0JyxcbiAgQ1FUID0gJ2NxdCcsXG4gIENRWCA9ICdjcXgnLFxuICBDUkRUID0gJ2NyZHQnLFxuICBDUkUgPSAnY3JlJyxcbiAgQ1JFQU0gPSAnY3JlYW0nLFxuICBDUkVQID0gJ2NyZXAnLFxuICBDUk8gPSAnY3JvJyxcbiAgQ1JWID0gJ2NydicsXG4gIENSUFQgPSAnY3JwdCcsXG4gIENSUFQxID0gJ2NycHQxJyxcbiAgQ1NMViA9ICdjc2x2JyxcbiAgQ1NQID0gJ2NzcCcsXG4gIENUU0kgPSAnY3RzaScsXG4gIENVU0QgPSAnY3VzZCcsXG4gIENVU0RDID0gJ2N1c2RjJyxcbiAgQ1dCVEMgPSAnY3didGMnLFxuICBDVkMgPSAnY3ZjJyxcbiAgQ1ZYID0gJ2N2eCcsXG4gIENaUlggPSAnY3pyeCcsXG4gIERBQ1hJID0gJ2RhY3hpJyxcbiAgREFJID0gJ2RhaScsXG4gIERBTyA9ICdkYW8nLFxuICBEQVRBID0gJ2RhdGEnLFxuICBEQVRBVjIgPSAnZGF0YXYyJyxcbiAgREFUQUVDT04gPSAnZGF0YWVjb24nLFxuICBERUMgPSAnZGVjJyxcbiAgREVOVCA9ICdkZW50JyxcbiAgREVQID0gJ2RlcCcsXG4gIERFWEEgPSAnZGV4YScsXG4gIERGRCA9ICdkZmQnLFxuICBERkkgPSAnZGZpJyxcbiAgREdDTCA9ICdkZ2NsJyxcbiAgREdEID0gJ2RnZCcsXG4gIERHWCA9ICdkZ3gnLFxuICBESUdHID0gJ2RpZ2cnLFxuICBETVQgPSAnZG10JyxcbiAgRE9ETyA9ICdkb2RvJyxcbiAgRFBJID0gJ2RwaScsXG4gIERSUFUgPSAnZHJwdScsXG4gIERSViA9ICdkcnYnLFxuICBEVUMgPSAnZHVjJyxcbiAgRFgxVSA9ICdkeDF1JyxcbiAgRFhHVCA9ICdkeGd0JyxcbiAgRFhQVCA9ICdkeHB0JyxcbiAgRFhTVCA9ICdkeHN0JyxcbiAgRFlEWCA9ICdkeWR4JyxcbiAgRFlOID0gJ2R5bicsXG4gIEVBU1kgPSAnZWFzeScsXG4gIEVCVENRID0gJ2VidGNxJyxcbiAgRUNIVCA9ICdlY2h0JyxcbiAgRURJU09OID0gJ2VkaXNvbicsXG4gIEVETiA9ICdlZG4nLFxuICBFRFIgPSAnZWRyJyxcbiAgRUZJID0gJ2VmaScsXG4gIEVHTCA9ICdlZ2wnLFxuICBFR0xEID0gJ2VnbGQnLFxuICBFR09MRCA9ICdlZ29sZCcsXG4gIEVMRiA9ICdlbGYnLFxuICBFTVggPSAnZW14JyxcbiAgRU5HID0gJ2VuZycsXG4gIEVOSiA9ICdlbmonLFxuICBFTlMgPSAnZW5zJyxcbiAgRVFPID0gJ2VxbycsXG4gIEVUQSA9ICdldGEnLFxuICBFVEhPUyA9ICdldGhvcycsXG4gIEVUViA9ICdldHYnLFxuICBFVVJTID0gJ2V1cnMnLFxuICBFVVJTVCA9ICdldXJzdCcsXG4gIEVVUlQgPSAnZXVydCcsXG4gIEVVUlggPSAnZXVyeCcsXG4gIEVVWCA9ICdldXgnLFxuICBFVlggPSAnZXZ4JyxcbiAgRVhFID0gJ2V4ZScsXG4gIEZFSSA9ICdmZWknLFxuICBGRVQgPSAnZmV0JyxcbiAgRkVUMSA9ICdmZXQxJyxcbiAgRkRUID0gJ2ZkdCcsXG4gIEZGMSA9ICdmZjEnLFxuICBGRlQgPSAnZmZ0JyxcbiAgRklSRSA9ICdmaXJlJyxcbiAgRklYRUQgPSAnZml4ZWQnLFxuICBGTUYgPSAnZm1mJyxcbiAgRk9SVEggPSAnZm9ydGgnLFxuICBGVE0gPSAnZnRtJyxcbiAgRlRUID0gJ2Z0dCcsXG4gIEZVTiA9ICdmdW4nLFxuICBGV0IgPSAnZndiJyxcbiAgRlhSVCA9ICdmeHJ0JyxcbiAgRlhTID0gJ2Z4cycsXG4gIEdBTCA9ICdnYWwnLFxuICBHQUxBID0gJ2dhbGEnLFxuICBHQU1NQSA9ICdnYW1tYScsXG4gIEdCUFggPSAnZ2JweCcsXG4gIEdEVCA9ICdnZHQnLFxuICBHRUMgPSAnZ2VjJyxcbiAgR0VOID0gJ2dlbicsXG4gIEdIVUIgPSAnZ2h1YicsXG4gIEdJR0RST1AgPSAnZ2lnZHJvcCcsXG4gIEdMRFggPSAnZ2xkeCcsXG4gIEdMTSA9ICdnbG0nLFxuICBHTk8gPSAnZ25vJyxcbiAgR05UID0gJ2dudCcsXG4gIEdPRFMgPSAnZ29kcycsXG4gIEdPRyA9ICdnb2cnLFxuICBHT0xEID0gJ2dvbGQnLFxuICBHT1QgPSAnZ290JyxcbiAgR1JUID0gJ2dydCcsXG4gIEdUQUFWRTE4RFAgPSAnZ3RhYXZlMThkcCcsXG4gIEdUQkFUMThEUCA9ICdndGJhdDE4ZHAnLFxuICBHVENPTVAxOERQID0gJ2d0Y29tcDE4ZHAnLFxuICBHVEdSVDE4RFAgPSAnZ3RncnQxOGRwJyxcbiAgR1RMSU5LMThEUCA9ICdndGxpbmsxOGRwJyxcbiAgR1RNS1IxOERQID0gJ2d0bWtyMThkcCcsXG4gIEdUU05YMThEUCA9ICdndHNueDE4ZHAnLFxuICBHVFVOSTE4RFAgPSAnZ3R1bmkxOGRwJyxcbiAgR1RVU0RUNkRQID0gJ2d0dXNkdDZkcCcsXG4gIEdUWUZJMThEUCA9ICdndHlmaTE4ZHAnLFxuICBHVFdCVEM4RFAgPSAnZ3R3YnRjOGRwJyxcbiAgR1RPID0gJ2d0bycsXG4gIEdURVJDMkRQID0gJ2d0ZXJjMmRwJyxcbiAgR1RFUkM2RFAgPSAnZ3RlcmM2ZHAnLFxuICBHVEVSQzE4RFAgPSAnZ3RlcmMxOGRwJyxcbiAgR1VTRCA9ICdndXNkJyxcbiAgR1VTRFQgPSAnZ3VzZHQnLFxuICBHWEMgPSAnZ3hjJyxcbiAgR1lFTiA9ICdneWVuJyxcbiAgSENOID0gJ2hjbicsXG4gIEhETyA9ICdoZG8nLFxuICBIRURHID0gJ2hlZGcnLFxuICBIS0RYID0gJ2hrZHgnLFxuICBITEMgPSAnaGxjJyxcbiAgSE1UID0gJ2htdCcsXG4gIEhPTEQgPSAnaG9sZCcsXG4gIEhPVCA9ICdob3QnLFxuICBIUVQgPSAnaHF0JyxcbiAgSFNUID0gJ2hzdCcsXG4gIEhUID0gJ2h0JyxcbiAgSFVNID0gJ2h1bScsXG4gIEhYUk8gPSAnaHhybycsXG4gIEhZQiA9ICdoeWInLFxuICBIWURSTyA9ICdoeWRybycsXG4gIEk4ID0gJ2k4JyxcbiAgSURFWCA9ICdpZGV4JyxcbiAgSURSQyA9ICdpZHJjJyxcbiAgSURSVCA9ICdpZHJ0JyxcbiAgSU1YID0gJ2lteCcsXG4gIElNWFYyID0gJ2lteHYyJyxcbiAgSU5DWCA9ICdpbmN4JyxcbiAgSU5EID0gJ2luZCcsXG4gIElOREVYID0gJ2luZGV4JyxcbiAgSU5GID0gJ2luZicsXG4gIElOSiA9ICdpbmonLFxuICBJTkpWMiA9ICdpbmp2MicsXG4gIElOU1QgPSAnaW5zdCcsXG4gIElOWCA9ICdpbngnLFxuICBJU0YgPSAnaXNmJyxcbiAgSVNSID0gJ2lzcicsXG4gIElWTyA9ICdpdm8nLFxuICBJVlkgPSAnaXZ5JyxcbiAgSkJDID0gJ2piYycsXG4gIEpGSU4gPSAnamZpbicsXG4gIEpQWVggPSAnanB5eCcsXG4gIEtFRVAgPSAna2VlcCcsXG4gIEtFWSA9ICdrZXknLFxuICBLSU4gPSAna2luJyxcbiAgS0lSTyA9ICdraXJvJyxcbiAgS05DID0gJ2tuYycsXG4gIEtOQzIgPSAna25jMicsXG4gIEtPSU4gPSAna29pbicsXG4gIEtPWiA9ICdrb3onLFxuICBLUDNSID0gJ2twM3InLFxuICBLWkUgPSAna3plJyxcbiAgTEFZRVIgPSAnbGF5ZXInLFxuICBMQkEgPSAnbGJhJyxcbiAgTEVORCA9ICdsZW5kJyxcbiAgTEVPID0gJ2xlbycsXG4gIExHTyA9ICdsZ28nLFxuICBMSU5LID0gJ2xpbmsnLFxuICBMSU9OID0gJ2xpb24nLFxuICBMTkMgPSAnbG5jJyxcbiAgTE9PS1MgPSAnbG9va3MnLFxuICBMT09NID0gJ2xvb20nLFxuICBMT09NMSA9ICdsb29tMScsXG4gIExSQyA9ICdscmMnLFxuICBMUkNWMiA9ICdscmN2MicsXG4gIExZTiA9ICdseW4nLFxuICBNQU5BID0gJ21hbmEnLFxuICBNQVBTID0gJ21hcHMnLFxuICBNQVRJQyA9ICdtYXRpYycsXG4gIE1DQVUgPSAnbWNhdScsXG4gIE1DREFJID0gJ21jZGFpJyxcbiAgTUNPID0gJ21jbycsXG4gIE1DUyA9ICdtY3MnLFxuICBNQ1ggPSAnbWN4JyxcbiAgTURGQyA9ICdtZGZjJyxcbiAgTURYID0gJ21keCcsXG4gIE1FRFggPSAnbWVkeCcsXG4gIE1FTUUgPSAnbWVtZScsXG4gIE1FVCA9ICdtZXQnLFxuICBNRVRBID0gJ21ldGEnLFxuICBNRkcgPSAnbWZnJyxcbiAgTUZQSCA9ICdtZnBoJyxcbiAgTUZUID0gJ21mdCcsXG4gIE1JTEtWMiA9ICdtaWxrdjInLFxuICBNSVIgPSAnbWlyJyxcbiAgTUlUSCA9ICdtaXRoJyxcbiAgTUlYID0gJ21peCcsXG4gIE1JWk4gPSAnbWl6bicsXG4gIE1LUiA9ICdta3InLFxuICBNTlMgPSAnbW5zJyxcbiAgTU5ERSA9ICdtbmRlJyxcbiAgTU9DID0gJ21vYycsXG4gIE1PRiA9ICdtb2YnLFxuICBNUEFZID0gJ21wYXknLFxuICBNUEwgPSAnbXBsJyxcbiAgTVRDTiA9ICdtdGNuJyxcbiAgTVRMID0gJ210bCcsXG4gIE1VU0QgPSAnbXVzZCcsXG4gIE1WTCA9ICdtdmwnLFxuICBNVkkgPSAnbXZpJyxcbiAgTkFTID0gJ25hcycsXG4gIE5DVCA9ICduY3QnLFxuICBORFggPSAnbmR4JyxcbiAgTkVVID0gJ25ldScsXG4gIE5FWE8gPSAnbmV4bycsXG4gIE5GVFggPSAnbmZ0eCcsXG4gIE5HTlQgPSAnbmdudCcsXG4gIE5JQVggPSAnbmlheCcsXG4gIE5NUiA9ICdubXInLFxuICBOUFhTID0gJ25weHMnLFxuICBOUzJEUlAgPSAnbnMyZHJwJyxcbiAgTlUgPSAnbnUnLFxuICBOWU0gPSAnbnltJyxcbiAgTlpEWCA9ICduemR4JyxcbiAgT0NFQU4gPSAnb2NlYW4nLFxuICBPQ0VBTlYyID0gJ29jZWFudjInLFxuICBPR04gPSAnb2duJyxcbiAgT00gPSAnb20nLFxuICBPTUcgPSAnb21nJyxcbiAgT05MID0gJ29ubCcsXG4gIE9QVCA9ICdvcHQnLFxuICBPUkFJID0gJ29yYWknLFxuICBPUkJTID0gJ29yYnMnLFxuICBPUkNBID0gJ29yY2EnLFxuICBPWFQgPSAnb3h0JyxcbiAgT1hZID0gJ294eScsXG4gIE9ITSA9ICdvaG0nLFxuICBTRCA9ICdzZCcsXG4gIFNPSE0gPSAnc29obScsXG4gIEdPSE0gPSAnZ29obScsXG4gIFBBUiA9ICdwYXInLFxuICBQQVNTID0gJ3Bhc3MnLFxuICBQQVUgPSAncGF1JyxcbiAgUEFYID0gJ3BheCcsXG4gIFBBWEcgPSAncGF4ZycsXG4gIFBBWSA9ICdwYXknLFxuICBQQkNIID0gJ3BiY2gnLFxuICBQREFUQSA9ICdwZGF0YScsXG4gIFBCVEMgPSAncGJ0YycsXG4gIFBFRyA9ICdwZWcnLFxuICBQRVJQID0gJ3BlcnAnLFxuICBQRVRIID0gJ3BldGgnLFxuICBQSE5YID0gJ3BobngnLFxuICBQSUUgPSAncGllJyxcbiAgUExDID0gJ3BsYycsXG4gIFBGQ1QgPSAncGZjdCcsXG4gIFBMQU5FVCA9ICdwbGFuZXQnLFxuICBQTE5YID0gJ3BsbngnLFxuICBQTFggPSAncGx4JyxcbiAgUE1BID0gJ3BtYScsXG4gIFBPTFkgPSAncG9seScsXG4gIFBPV1IgPSAncG93cicsXG4gIFBQVCA9ICdwcHQnLFxuICBQUkRYID0gJ3ByZHgnLFxuICBQUklOVFMgPSAncHJpbnRzJyxcbiAgUFJPID0gJ3BybycsXG4gIFBSVFMgPSAncHJ0cycsXG4gIFBTVEFLRSA9ICdwc3Rha2UnLFxuICBQVU5ESVggPSAncHVuZGl4JyxcbiAgUFVTRCA9ICdwdXNkJyxcbiAgUFhQID0gJ3B4cCcsXG4gIFFBU0ggPSAncWFzaCcsXG4gIFFDQUQgPSAncWNhZCcsXG4gIFFVSUNLID0gJ3F1aWNrJyxcbiAgUURUID0gJ3FkdCcsXG4gIFFOVCA9ICdxbnQnLFxuICBRUkRPID0gJ3FyZG8nLFxuICBRUkwgPSAncXJsJyxcbiAgUVNQID0gJ3FzcCcsXG4gIFFWVCA9ICdxdnQnLFxuICBSQUQgPSAncmFkJyxcbiAgUkNPSU4gPSAncmNvaW4nLFxuICBSQVJFID0gJ3JhcmUnLFxuICBSQVJJID0gJ3JhcmknLFxuICBSQVkgPSAncmF5JyxcbiAgUkJZID0gJ3JieScsXG4gIFJETiA9ICdyZG4nLFxuICBSRUIgPSAncmViJyxcbiAgUkVCTCA9ICdyZWJsJyxcbiAgUkVFRiA9ICdyZWVmJyxcbiAgUkVQID0gJ3JlcCcsXG4gIFJFUFYyID0gJ3JlcHYyJyxcbiAgUkZSID0gJ3JmcicsXG4gIFJGVUVMID0gJ3JmdWVsJyxcbiAgUkdUID0gJ3JndCcsXG4gIFJJRiA9ICdyaWYnLFxuICBSSU5HWCA9ICdyaW5neCcsXG4gIFJMQyA9ICdybGMnLFxuICBSTFkgPSAncmx5JyxcbiAgUk5EUiA9ICdybmRyJyxcbiAgUk9PSyA9ICdyb29rJyxcbiAgUk9OQyA9ICdyb25jJyxcbiAgUk9PQkVFID0gJ3Jvb2JlZScsXG4gIFJVQlggPSAncnVieCcsXG4gIFJVRURBVEsgPSAncnVlZGF0aycsXG4gIFNBTFQgPSAnc2FsdCcsXG4gIFNBTkQgPSAnc2FuZCcsXG4gIFNBU0hJTUkgPSAnc2FzaGltaScsXG4gIFNHQSA9ICdzZ2EnLFxuICBTR0RYID0gJ3NnZHgnLFxuICBTR1IgPSAnc2dyJyxcbiAgU0hLID0gJ3NoaycsXG4gIFNIT1BYID0gJ3Nob3B4JyxcbiAgU0hJQiA9ICdzaGliJyxcbiAgU0hSID0gJ3NocicsXG4gIFNJSCA9ICdzaWgnLFxuICBTSUxWID0gJ3NpbHYnLFxuICBTS0FMRSA9ICdza2FsZScsXG4gIFNMQUIgPSAnc2xhYicsXG4gIFNMTkQgPSAnc2xuZCcsXG4gIFNMT1QgPSAnc2xvdCcsXG4gIFNMUCA9ICdzbHAnLFxuICBTTFZYID0gJ3NsdngnLFxuICBTTkMgPSAnc25jJyxcbiAgU05PViA9ICdzbm92JyxcbiAgU05UID0gJ3NudCcsXG4gIFNOWCA9ICdzbngnLFxuICBTT0MgPSAnc29jJyxcbiAgU1BPID0gJ3NwbycsXG4gIFNPTFZFID0gJ3NvbHZlJyxcbiAgU1JOVCA9ICdzcm50JyxcbiAgU1JNID0gJ3NybScsXG4gIFNUQlUgPSAnc3RidScsXG4gIFNUQyA9ICdzdGMnLFxuICBTVENWMiA9ICdzdGN2MicsXG4gIFNUS0FBVkUgPSAnc3RrYWF2ZScsXG4gIFNUT1JFID0gJ3N0b3JlJyxcbiAgU1RPUkogPSAnc3RvcmonLFxuICBTVE9STSA9ICdzdG9ybScsXG4gIFNUWkVOID0gJ3N0emVuJyxcbiAgU1VTSEkgPSAnc3VzaGknLFxuICBTUVVJRyA9ICdzcXVpZycsXG4gIFNYUCA9ICdzeHAnLFxuICBUSFJFU0hPTEQgPSAndGhyZXNob2xkJyxcbiAgVEFVRCA9ICd0YXVkJyxcbiAgVEJUQzEgPSAndGJ0YzEnLFxuICBUQ0FEID0gJ3RjYWQnLFxuICBUQ08gPSAndGNvJyxcbiAgVEVMID0gJ3RlbCcsXG4gIFRFTiA9ICd0ZW4nLFxuICBURU5YID0gJ3RlbngnLFxuICBURVJDID0gJ3RlcmMnLFxuICBURVJDMkRQID0gJ3RlcmMyZHAnLFxuICBURVJDNkRQID0gJ3RlcmM2ZHAnLFxuICBURVJDMThEUCA9ICd0ZXJjMThEUCcsXG4gIFRFUkMyMCA9ICd0ZXJjMjAnLFxuICBUR0JQID0gJ3RnYnAnLFxuICBUSEtEID0gJ3Roa2QnLFxuICBUSU9YID0gJ3Rpb3gnLFxuICBUS05UID0gJ3RrbnQnLFxuICBUS1ggPSAndGt4JyxcbiAgVExBQiA9ICd0bGFiJyxcbiAgVE5UID0gJ3RudCcsXG4gIFRPSyA9ICd0b2snLFxuICBUUkFYWCA9ICd0cmF4eCcsXG4gIFRSSUJFID0gJ3RyaWJlJyxcbiAgVFJMID0gJ3RybCcsXG4gIFRSU1QgPSAndHJzdCcsXG4gIFRSVSA9ICd0cnUnLFxuICBUUllCID0gJ3RyeWInLFxuICBUUllYID0gJ3RyeXgnLFxuICBUVVNEID0gJ3R1c2QnLFxuICBUWEwgPSAndHhsJyxcbiAgVUFJUiA9ICd1YWlyJyxcbiAgVUNPID0gJ3VjbycsXG4gIFVLRyA9ICd1a2cnLFxuICBVTUEgPSAndW1hJyxcbiAgVU1FRSA9ICd1bWVlJyxcbiAgVU5CID0gJ3VuYicsXG4gIFVOSSA9ICd1bmknLFxuICBVUCA9ICd1cCcsXG4gIFVQQlRDID0gJ3VwYnRjJyxcbiAgVVBQID0gJ3VwcCcsXG4gIFVQVCA9ICd1cHQnLFxuICBVUFVTRCA9ICd1cHVzZCcsXG4gIFVRQyA9ICd1cWMnLFxuICBVUkhEID0gJ3VyaGQnLFxuICBVU0RDID0gJ3VzZGMnLFxuICAvLyBBbHNvIGF2YWlsYWJsZSBvbiBFT1NcbiAgVVNEVCA9ICd1c2R0JyxcbiAgVVNEWCA9ICd1c2R4JyxcbiAgVVNHID0gJ3VzZycsXG4gIFVTUFggPSAndXNweCcsXG4gIFVTVCA9ICd1c3QnLFxuICBVU1ggPSAndXN4JyxcbiAgVVRLID0gJ3V0aycsXG4gIFVUSzEgPSAndXRrMScsXG4gIFZBTE9SID0gJ3ZhbG9yJyxcbiAgVkRYID0gJ3ZkeCcsXG4gIFZFR0EgPSAndmVnYScsXG4gIFZJU1IgPSAndmlzcicsXG4gIFZSR1ggPSAndnJneCcsXG4gIFZYQyA9ICd2eGMnLFxuICBWU1AgPSAndnNwJyxcbiAgV0FGTCA9ICd3YWZsJyxcbiAgV0FYID0gJ3dheCcsXG4gIFdBQkkgPSAnd2FiaScsXG4gIFdUSyA9ICd3dGsnLFxuICBXQlRDID0gJ3didGMnLFxuICBXQ0ZHID0gJ3djZmcnLFxuICBXRUMgPSAnd2VjJyxcbiAgV0VUID0gJ3dldCcsXG4gIFdFVEggPSAnd2V0aCcsXG4gIFdIQUxFID0gJ3doYWxlJyxcbiAgV0hUID0gJ3dodCcsXG4gIFdJTEQgPSAnd2lsZCcsXG4gIFdOWE0gPSAnd254bScsXG4gIFdMVU5BID0gJ3dsdW5hJyxcbiAgV1NURVRIID0gJ3dzdGV0aCcsXG4gIFdQWCA9ICd3cHgnLFxuICBXVEMgPSAnd3RjJyxcbiAgV1hSUCA9ICd3eHJwJyxcbiAgV1hUID0gJ3d4dCcsXG4gIFhBVUQgPSAneGF1ZCcsXG4gIFhCR09MRCA9ICd4YmdvbGQnLFxuICBYQ0QgPSAneGNkJyxcbiAgWEVYID0gJ3hleCcsXG4gIFhSTCA9ICd4cmwnLFxuICBYU0dEID0gJ3hzZ2QnLFxuICBYU1VTSEkgPSAneHN1c2hpJyxcbiAgWFRQID0gJ3h0cCcsXG4gIFlGREFJID0gJ3lmZGFpJyxcbiAgWUZJID0gJ3lmaScsXG4gIFlGSUkgPSAneWZpaScsXG4gIFlHRyA9ICd5Z2cnLFxuICBZTEQgPSAneWxkJyxcbiAgWU5HID0gJ3luZycsXG4gIFlTRVkgPSAneXNleScsXG4gIFpBUlggPSAnemFyeCcsXG4gIFpDTyA9ICd6Y28nLFxuICBaSUwgPSAnemlsJyxcbiAgWklYID0gJ3ppeCcsXG4gIFpMVyA9ICd6bHcnLFxuICBaTVQgPSAnem10JyxcbiAgWk9PTSA9ICd6b29tJyxcbiAgWlJYID0gJ3pyeCcsXG4gIFpVU0QgPSAnenVzZCcsXG4gICd4bG06QlNULUdBRERGRTRSNzJZVVAyQU9FTDY3T0haTjNHSlFZUEMzVkU3MzROMlhGTUVHUlIyTDMyQ1ozWFlaJyA9ICd4bG06QlNULUdBRERGRTRSNzJZVVAyQU9FTDY3T0haTjNHSlFZUEMzVkU3MzROMlhGTUVHUlIyTDMyQ1ozWFlaJyxcbiAgJ3hsbTpWRUxPLUdETTRSUVVRUVVWU0tRQTdTNkVNN1hCWlAzRkNHSDRRN0NMNlRBQlE3QjJCRUo1RVJBUk0yTTVNJyA9ICd4bG06VkVMTy1HRE00UlFVUVFVVlNLUUE3UzZFTTdYQlpQM0ZDR0g0UTdDTDZUQUJRN0IyQkVKNUVSQVJNMk01TScsXG4gICd4bG06U0xULUdDS0E2SzVQQ1E2UE5GNVJRQkY3UFFESldSSE82VU9HRk1STEszRFlIRE9JMjQ0VjQ3WEtRNEdQJyA9ICd4bG06U0xULUdDS0E2SzVQQ1E2UE5GNVJRQkY3UFFESldSSE82VU9HRk1STEszRFlIRE9JMjQ0VjQ3WEtRNEdQJyxcbiAgJ3hsbTpVU0QtR0RVS01HVUdEWlFLNllIWUE1WjZBWTJHNFhEU1pQU1ozU1c1VU4zQVJWTU82UVNSRFdQNVlMRVgnID0gJ3hsbTpVU0QtR0RVS01HVUdEWlFLNllIWUE1WjZBWTJHNFhEU1pQU1ozU1c1VU4zQVJWTU82UVNSRFdQNVlMRVgnLFxuICAneGxtOkVUSC1HQlZPTDY3VE1VUUJHTDRUWllOTVkzWlE1V0dRWUZQRkQ1VkpSV1hSNzJWQTMzVkZOTDIyNVBMNScgPSAneGxtOkVUSC1HQlZPTDY3VE1VUUJHTDRUWllOTVkzWlE1V0dRWUZQRkQ1VkpSV1hSNzJWQTMzVkZOTDIyNVBMNScsXG4gICd4bG06V1hULUdBU0JMVkhTNUZPQUJTRE5XNVNQUEgzUVJKWVhZNUpIQTJBT0EyUUhIMkZKTFpCUlhTRzRTV1hUJyA9ICd4bG06V1hULUdBU0JMVkhTNUZPQUJTRE5XNVNQUEgzUVJKWVhZNUpIQTJBT0EyUUhIMkZKTFpCUlhTRzRTV1hUJyxcbiAgJ3hsbTpVU0RDLUdBNVpTRUpZQjM3SlJDNUFWQ0lBNU1PUDRSSFRNMzM1WDJLR1gzSUhPSkFQUDVSRTM0SzRLWlZOJyA9ICd4bG06VVNEQy1HQTVaU0VKWUIzN0pSQzVBVkNJQTVNT1A0UkhUTTMzNVgyS0dYM0lIT0pBUFA1UkUzNEs0S1pWTicsXG4gICd4bG06U0lYLUdETVM2RUVDT0g2TUJNQ1AzRllSWUVWUkJJVjNUUUdMT0ZRSVBWQUlUQlJKVU1USTZWN0EyWDZaJyA9ICd4bG06U0lYLUdETVM2RUVDT0g2TUJNQ1AzRllSWUVWUkJJVjNUUUdMT0ZRSVBWQUlUQlJKVU1USTZWN0EyWDZaJyxcbiAgJ3hsbTpCUkxULUdDSFEzRjJCRjVQNzRETUROT09HSFQ1RFVDS0M3NzNBVzVEVE9GSU5DMjZXNEtHWUZQWURQUlNPJyA9ICd4bG06QlJMVC1HQ0hRM0YyQkY1UDc0RE1ETk9PR0hUNURVQ0tDNzczQVc1RFRPRklOQzI2VzRLR1lGUFlEUFJTTycsXG4gICd4bG06QVJTVC1HQ1NBWlZXWFpLV1M0WFMyMjNNNUY1NEgyQjZYUElJWFpaR1A3S0VBSVU2WVNMNUhEUkdDSTNERycgPSAneGxtOkFSU1QtR0NTQVpWV1haS1dTNFhTMjIzTTVGNTRIMkI2WFBJSVhaWkdQN0tFQUlVNllTTDVIRFJHQ0kzREcnLFxuICAneGxtOkFRVUEtR0JOWklMU1RWUVo0UjdJS1FER0hZR1kyUVhMNVFPRkpZUU1YUEtXUlJNNVBBVjdZNE02N0FRVUEnID0gJ3hsbTpBUVVBLUdCTlpJTFNUVlFaNFI3SUtRREdIWUdZMlFYTDVRT0ZKWVFNWFBLV1JSTTVQQVY3WTRNNjdBUVVBJyxcblxuICAvLyBBbGdvcmFuZCBtYWlubmV0IHRva2Vuc1xuICAnYWxnbzozMTU2NjcwNCcgPSAnYWxnbzozMTU2NjcwNCcsXG4gICdhbGdvOjMxMjc2OScgPSAnYWxnbzozMTI3NjknLFxuICAnYWxnbzo2NTQ3MDE0JyA9ICdhbGdvOjY1NDcwMTQnLFxuXG4gIC8vIEtvdmFuLW9ubHkgRVJDMjAgdG9rZW5zXG4gIFRFU1QgPSAndGVzdCcsXG4gIFNDSFogPSAnc2NoeicsXG4gIENBVCA9ICdjYXQnLFxuXG4gIC8vIFN0ZWxsYXIgdGVzdG5ldCB0b2tlbnNcbiAgJ3R4bG06QlNULUdCUVRJT1MzWEdIQjdMVllHQktRVkpHQ1ozUjRKTDVFNENCU1dKNUFMSUpVSEJLUzYyNjM2NDRMJyA9ICd0eGxtOkJTVC1HQlFUSU9TM1hHSEI3TFZZR0JLUVZKR0NaM1I0Skw1RTRDQlNXSjVBTElKVUhCS1M2MjYzNjQ0TCcsXG4gICd0eGxtOlRTVC1HQlFUSU9TM1hHSEI3TFZZR0JLUVZKR0NaM1I0Skw1RTRDQlNXSjVBTElKVUhCS1M2MjYzNjQ0TCcgPSAndHhsbTpUU1QtR0JRVElPUzNYR0hCN0xWWUdCS1FWSkdDWjNSNEpMNUU0Q0JTV0o1QUxJSlVIQktTNjI2MzY0NEwnLFxuXG4gIC8vIEFsZ29yYW5kIHRlc3RuZXQgdG9rZW5zXG4gICd0YWxnbzoxNjAyNjcyOCcgPSAndGFsZ286MTYwMjY3MjgnLFxuICAndGFsZ286MTYwMjY3MzInID0gJ3RhbGdvOjE2MDI2NzMyJyxcbiAgJ3RhbGdvOjE2MDI2NzMzJyA9ICd0YWxnbzoxNjAyNjczMycsXG4gICd0YWxnbzoxMDQ1ODk0MScgPSAndGFsZ286MTA0NTg5NDEnLFxuICAndGFsZ286MTgwNDQ3JyA9ICd0YWxnbzoxODA0NDcnLFxuXG4gIC8vIEVPUyB0b2tlbnNcbiAgQ0hFWCA9ICdjaGV4JyxcbiAgSVEgPSAnaXEnLFxuICBFT1NfQk9YID0gJ2Vvczpib3gnLFxuXG4gIC8vIEF2YXggVG9rZW4gRVJDLTIwXG4gICdhdmF4YzpxaScgPSAnYXZheGM6cWknLFxuICAnYXZheGM6eGF2YScgPSAnYXZheGM6eGF2YScsXG4gICdhdmF4YzprbG8nID0gJ2F2YXhjOmtsbycsXG4gICdhdmF4Yzpqb2UnID0gJ2F2YXhjOmpvZScsXG4gICdhdmF4YzpwbmcnID0gJ2F2YXhjOnBuZycsXG4gICdhdmF4Yzp1c2R0JyA9ICdhdmF4Yzp1c2R0JyxcbiAgJ2F2YXhjOnVzZGMnID0gJ2F2YXhjOnVzZGMnLFxuICAnYXZheGM6bGluaycgPSAnYXZheGM6bGluaycsXG5cbiAgRVJDNzIxID0gJ2VyYzcyMScsXG4gIEVSQzExNTUgPSAnZXJjMTE1NScsXG59XG5cbi8qKlxuICogVGhpcyBpcyB0aGUgY3VydmUgQml0R28gc2lnbnMgYWdhaW5zdCB3aXRoIHRoZSB1c2VyLCBiYWNrdXAgYW5kIEJpdEdvIGtleS5cbiAqL1xuZXhwb3J0IGVudW0gS2V5Q3VydmUge1xuICBTZWNwMjU2azEgPSAnc2VjcDI1NmsxJyxcbiAgRWQyNTUxOSA9ICdlZDI1NTE5JyxcbiAgQkxTID0gJ2JscycsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmFzZUNvaW5Db25zdHJ1Y3Rvck9wdGlvbnMge1xuICBmdWxsTmFtZTogc3RyaW5nOyAvLyBmdWxsLCBodW1hbiByZWFkYWJsZSBuYW1lIG9mIHRoaXMgY29pbi4gRWcsIFwiQml0Y29pbiBDYXNoXCIgZm9yIGJjaFxuICBuYW1lOiBzdHJpbmc7IC8vIHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGlzIGNvaW4sIHVzdWFsbHkgdGhlIGxvd2VyY2FzZSB0aWNrZXIgb3Igc3ltYm9sLiBFZywgXCJidGNcIiBmb3IgYml0Y29pblxuICBhbGlhcz86IHN0cmluZzsgLy8gYWx0ZXJuYXRpdmUgbmFtZSB1c3VhbGx5IHVzZWQgZHVyaW5nIG5hbWUgbWlncmF0aW9uc1xuICBwcmVmaXg/OiBzdHJpbmc7XG4gIHN1ZmZpeD86IHN0cmluZztcbiAga2luZDogQ29pbktpbmQ7XG4gIGlzVG9rZW46IGJvb2xlYW47XG4gIGZlYXR1cmVzOiBDb2luRmVhdHVyZVtdO1xuICBkZWNpbWFsUGxhY2VzOiBudW1iZXI7XG4gIGFzc2V0OiBVbmRlcmx5aW5nQXNzZXQ7XG4gIG5ldHdvcms6IEJhc2VOZXR3b3JrO1xuICBwcmltYXJ5S2V5Q3VydmU6IEtleUN1cnZlO1xufVxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQmFzZUNvaW4ge1xuICAvKlxuICAgIERpc3BsYXkgcHJvcGVydGllc1xuICAgKi9cbiAgcHVibGljIHJlYWRvbmx5IGZ1bGxOYW1lOiBzdHJpbmc7XG4gIHB1YmxpYyByZWFkb25seSBuYW1lOiBzdHJpbmc7XG4gIHB1YmxpYyByZWFkb25seSBwcmVmaXg/OiBzdHJpbmc7XG4gIHB1YmxpYyByZWFkb25seSBzdWZmaXg/OiBzdHJpbmc7XG4gIC8qXG4gICAgUHJvcGVydHkgdG8gaGVscCBkdXJpbmcgbWlncmF0aW9uIG9mIHRva2VuIG5hbWVzLlxuICAgIEhlbHBzIHRvIGZpbmQgYSBjb2luL3Rva2VuIHdpdGggYSBkaWZmZXJlbnQgbmFtZSB0aGFuIHRoZSBjdXJyZW50IG9uZVxuICAgKi9cbiAgcHVibGljIHJlYWRvbmx5IGFsaWFzPzogc3RyaW5nO1xuICAvKlxuICAgIENsYXNzaWZpY2F0aW9uIHByb3BlcnRpZXNcbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBraW5kOiBDb2luS2luZDtcbiAgcHVibGljIHJlYWRvbmx5IGZhbWlseTogQ29pbkZhbWlseTtcbiAgcHVibGljIHJlYWRvbmx5IGlzVG9rZW46IGJvb2xlYW47XG4gIC8qXG4gICAgQ29pbiBGZWF0dXJlcy4gVGhlc2UgYXJlIHllcyBvciBubyBxdWVzdGlvbnMgYWJvdXQgd2hhdCB0aGUgY29pbiBzdXBwb3J0cyBhbmQgZG9lcyBub3Qgc3VwcG9ydC5cbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBmZWF0dXJlczogQ29pbkZlYXR1cmVbXTtcbiAgLypcbiAgICBDb2luIE5ldHdvcmsuIFRoaXMgaXMgYSBsaXN0IG9mIHByb3BlcnRpZXMgd2hpY2ggYXJlIHJlbGV2YW50IHRvIHRoZSB1bmRlcmx5aW5nIG5ldHdvcmsgb24gd2hpY2ggdGhpcyBjb2luIGV4aXN0cy5cbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBuZXR3b3JrOiBCYXNlTmV0d29yaztcbiAgLypcbiAgICBDb252ZXJzaW9uIHByb3BlcnRpZXNcbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBkZWNpbWFsUGxhY2VzOiBudW1iZXI7XG4gIHB1YmxpYyByZWFkb25seSBhc3NldDogVW5kZXJseWluZ0Fzc2V0O1xuXG4gIC8qKlxuICAgKiBUaGUgcHJpbWFyeSBlbGxpcHRpYyBjdXJ2ZSBCaXRHbyBzaWducyBhbmQgZ2VuZXJhdGVzIGtleXMgYWdhaW5zdC5cbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBwcmltYXJ5S2V5Q3VydmU6IEtleUN1cnZlO1xuXG4gIC8qKlxuICAgKiBTZXQgb2YgZmVhdHVyZXMgd2hpY2ggYXJlIHJlcXVpcmVkIGJ5IGEgY29pbiBzdWJjbGFzc1xuICAgKiBAcmV0dXJuIHtTZXQ8Q29pbkZlYXR1cmU+fVxuICAgKi9cbiAgcHJvdGVjdGVkIGFic3RyYWN0IHJlcXVpcmVkRmVhdHVyZXMoKTogU2V0PENvaW5GZWF0dXJlPjtcblxuICAvKipcbiAgICogU2V0IG9mIGZlYXR1cmVzIHdoaWNoIGFyZSBub3QgdmFsaWQgYW5kIGFyZSBkaXNhbGxvd2VkIGJ5IGEgY29pbiBzdWJjbGFzc1xuICAgKiBAcmV0dXJuIHtTZXQ8Q29pbkZlYXR1cmU+fVxuICAgKi9cbiAgcHJvdGVjdGVkIGFic3RyYWN0IGRpc2FsbG93ZWRGZWF0dXJlcygpOiBTZXQ8Q29pbkZlYXR1cmU+O1xuXG4gIC8qKlxuICAgKiBFbnN1cmVzIHRoYXQgdGhlIGJhc2UgY29pbiBjb25zdHJ1Y3RvciB3YXMgcGFzc2VkIGEgdmFsaWQgc2V0IG9mIG9wdGlvbnMuXG4gICAqXG4gICAqIFRoaXMgaW5jbHVkZXMgY2hlY2tpbmcgdGhhdDpcbiAgICogLSBBbGwgY29pbiBmZWF0dXJlcyBvZiB0aGUgbmV3IGluc3RhbmNlIGFyZSBhbGxvd2VkIGJ5IHRoZSBjb2luIGNsYXNzXG4gICAqIC0gTm8gZmVhdHVyZXMgcmVxdWlyZWQgYnkgdGhlIGNvaW4gY2xhc3MgYXJlIG1pc3NpbmcgZnJvbSB0aGUgbmV3IGluc3RhbmNlXG4gICAqIEBwYXJhbSB7QmFzZUNvaW5Db25zdHJ1Y3Rvck9wdGlvbnN9IG9wdGlvbnNcbiAgICogQHRocm93cyB7RGlzYWxsb3dlZENvaW5GZWF0dXJlRXJyb3J9IGlmIGFueSBvZiB0aGUgY29pbiBmZWF0dXJlcyBhcmUgbm90IGFsbG93ZWQgZm9yIHRoZSBjb2luIGNsYXNzXG4gICAqIEB0aHJvd3Mge01pc3NpbmdSZXF1aXJlZENvaW5GZWF0dXJlRXJyb3J9IGlmIGFueSBmZWF0dXJlcyByZXF1aXJlZCBieSB0aGUgY29pbiBjbGFzcyBhcmUgbWlzc2luZ1xuICAgKi9cbiAgcHJpdmF0ZSB2YWxpZGF0ZU9wdGlvbnMob3B0aW9uczogQmFzZUNvaW5Db25zdHJ1Y3Rvck9wdGlvbnMpIHtcbiAgICBjb25zdCByZXF1aXJlZEZlYXR1cmVzID0gdGhpcy5yZXF1aXJlZEZlYXR1cmVzKCk7XG4gICAgY29uc3QgZGlzYWxsb3dlZEZlYXR1cmVzID0gdGhpcy5kaXNhbGxvd2VkRmVhdHVyZXMoKTtcblxuICAgIGNvbnN0IGludGVyc2VjdGlvbkZlYXR1cmVzID0gQXJyYXkuZnJvbShyZXF1aXJlZEZlYXR1cmVzKS5maWx0ZXIoKGZlYXQpID0+IGRpc2FsbG93ZWRGZWF0dXJlcy5oYXMoZmVhdCkpO1xuXG4gICAgaWYgKGludGVyc2VjdGlvbkZlYXR1cmVzLmxlbmd0aCA+IDApIHtcbiAgICAgIHRocm93IG5ldyBDb25mbGljdGluZ0NvaW5GZWF0dXJlc0Vycm9yKG9wdGlvbnMubmFtZSwgaW50ZXJzZWN0aW9uRmVhdHVyZXMpO1xuICAgIH1cblxuICAgIGZvciAoY29uc3QgZmVhdHVyZSBvZiBvcHRpb25zLmZlYXR1cmVzKSB7XG4gICAgICBpZiAoZGlzYWxsb3dlZEZlYXR1cmVzLmhhcyhmZWF0dXJlKSkge1xuICAgICAgICB0aHJvdyBuZXcgRGlzYWxsb3dlZENvaW5GZWF0dXJlRXJyb3Iob3B0aW9ucy5uYW1lLCBmZWF0dXJlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHJlcXVpcmVkRmVhdHVyZXMuaGFzKGZlYXR1cmUpKSB7XG4gICAgICAgIHJlcXVpcmVkRmVhdHVyZXMuZGVsZXRlKGZlYXR1cmUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChyZXF1aXJlZEZlYXR1cmVzLnNpemUgPiAwKSB7XG4gICAgICAvLyBzb21lIHJlcXVpcmVkIGZlYXR1cmVzIHdlcmUgbWlzc2luZ1xuICAgICAgdGhyb3cgbmV3IE1pc3NpbmdSZXF1aXJlZENvaW5GZWF0dXJlRXJyb3Iob3B0aW9ucy5uYW1lLCBBcnJheS5mcm9tKHJlcXVpcmVkRmVhdHVyZXMpKTtcbiAgICB9XG4gIH1cblxuICBwcm90ZWN0ZWQgY29uc3RydWN0b3Iob3B0aW9uczogQmFzZUNvaW5Db25zdHJ1Y3Rvck9wdGlvbnMpIHtcbiAgICB0aGlzLnZhbGlkYXRlT3B0aW9ucyhvcHRpb25zKTtcblxuICAgIHRoaXMuZnVsbE5hbWUgPSBvcHRpb25zLmZ1bGxOYW1lO1xuICAgIHRoaXMubmFtZSA9IG9wdGlvbnMubmFtZTtcbiAgICB0aGlzLmFsaWFzID0gb3B0aW9ucy5hbGlhcztcbiAgICB0aGlzLnByZWZpeCA9IG9wdGlvbnMucHJlZml4O1xuICAgIHRoaXMuc3VmZml4ID0gb3B0aW9ucy5zdWZmaXg7XG4gICAgdGhpcy5raW5kID0gb3B0aW9ucy5raW5kO1xuICAgIHRoaXMuZmFtaWx5ID0gb3B0aW9ucy5uZXR3b3JrLmZhbWlseTtcbiAgICB0aGlzLmlzVG9rZW4gPSBvcHRpb25zLmlzVG9rZW47XG4gICAgdGhpcy5mZWF0dXJlcyA9IG9wdGlvbnMuZmVhdHVyZXM7XG4gICAgdGhpcy5kZWNpbWFsUGxhY2VzID0gb3B0aW9ucy5kZWNpbWFsUGxhY2VzO1xuICAgIHRoaXMuYXNzZXQgPSBvcHRpb25zLmFzc2V0O1xuICAgIHRoaXMubmV0d29yayA9IG9wdGlvbnMubmV0d29yaztcbiAgICB0aGlzLnByaW1hcnlLZXlDdXJ2ZSA9IG9wdGlvbnMucHJpbWFyeUtleUN1cnZlO1xuICB9XG59XG4iXX0=