/// <reference types="node" />
import { IntegerType } from '@stacks/common';
import { PostConditionType, FungibleConditionCode, NonFungibleConditionCode, StacksMessageType } from './constants';
import { AssetInfo, PostConditionPrincipal } from './types';
import { BufferReader } from './bufferReader';
import { ClarityValue } from './clarity';
export declare type PostCondition = STXPostCondition | FungiblePostCondition | NonFungiblePostCondition;
export interface STXPostCondition {
    readonly type: StacksMessageType.PostCondition;
    readonly conditionType: PostConditionType.STX;
    readonly principal: PostConditionPrincipal;
    readonly conditionCode: FungibleConditionCode;
    readonly amount: bigint;
}
export declare function createSTXPostCondition(principal: string | PostConditionPrincipal, conditionCode: FungibleConditionCode, amount: IntegerType): STXPostCondition;
export interface FungiblePostCondition {
    readonly type: StacksMessageType.PostCondition;
    readonly conditionType: PostConditionType.Fungible;
    readonly principal: PostConditionPrincipal;
    readonly conditionCode: FungibleConditionCode;
    readonly amount: bigint;
    readonly assetInfo: AssetInfo;
}
export declare function createFungiblePostCondition(principal: string | PostConditionPrincipal, conditionCode: FungibleConditionCode, amount: IntegerType, assetInfo: string | AssetInfo): FungiblePostCondition;
export interface NonFungiblePostCondition {
    readonly type: StacksMessageType.PostCondition;
    readonly conditionType: PostConditionType.NonFungible;
    readonly principal: PostConditionPrincipal;
    readonly conditionCode: NonFungibleConditionCode;
    readonly assetInfo: AssetInfo;
    readonly assetName: ClarityValue;
}
export declare function createNonFungiblePostCondition(principal: string | PostConditionPrincipal, conditionCode: NonFungibleConditionCode, assetInfo: string | AssetInfo, assetName: ClarityValue): NonFungiblePostCondition;
export declare function serializePostCondition(postCondition: PostCondition): Buffer;
export declare function deserializePostCondition(bufferReader: BufferReader): PostCondition;
