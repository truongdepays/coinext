import { metadataRpc } from './staticV3-1-1';
export { metadataRpc };
/**
 * Base tx information common to all tested transactions
 */
export declare const TEST_BASE_TX_INFO: {
    address: string;
    blockHash: string;
    blockNumber: number;
    eraPeriod: number;
    genesisHash: string;
    metadataRpc: `0x${string}`;
    nonce: number;
    specVersion: number;
    tip: number;
    transactionVersion: number;
};
/**
 * Base tx information common to all tested transactions using runtime v29
 */
export declare const TEST_BASE_TX_INFO_V29: {
    address: string;
    blockHash: string;
    blockNumber: number;
    eraPeriod: number;
    genesisHash: string;
    metadataRpc: `0x${string}`;
    nonce: number;
    specVersion: number;
    tip: number;
    transactionVersion: number;
};
/**
 * Use this registry in tests.
 */
export declare const POLKADOT_25_TEST_OPTIONS: {
    metadataRpc: `0x${string}`;
    registry: import("@polkadot/types").TypeRegistry;
};
/**
 * Test options for runtime v29
 */
export declare const POLKADOT_29_TEST_OPTIONS: {
    metadataRpc: `0x${string}`;
    registry: import("@polkadot/types").TypeRegistry;
};
/**
 * Test options for runtime v9122
 */
export declare const POLKADOT_9122_TEST_OPTIONS: {
    metadataRpc: `0x${string}`;
    registry: import("@polkadot/types").TypeRegistry;
};
/**
 * Test options for runtime v9122 with calls only metadata
 */
export declare const POLKADOT_9122_TEST_OPTIONS_CALLS_ONLY: {
    metadataRpc: `0x${string}`;
    registry: import("@polkadot/types").TypeRegistry;
    asCallsOnlyArg: boolean;
};
/**
 * Test options for runtime v9160 Kusama
 */
export declare const KUSAMA_9160_TEST_OPTIONS: {
    metadataRpc: `0x${string}`;
    registry: import("@polkadot/types").TypeRegistry;
};
/**
 * Dummy arguments for all methods we're testing.
 */
export declare const TEST_METHOD_ARGS: {
    balances: {
        transfer: {
            dest: string;
            value: number;
        };
    };
};
/**
 * Prefix for ss58-encoded addresses on Polkadot, Kusama, and Westend. Note:
 * 42, the Westend prefix, is also the default for Substrate-based chains.
 */
export declare enum PolkadotSS58Format {
    polkadot = 0,
    kusama = 2,
    westend = 42,
    substrate = 42
}
