import { createSignedTx as signedTx, createSigningPayload as signingPayload, createSigningPayloadToU8a as signingPayloadToU8a, encodeUnsignedTransaction, getTxHash as txHash } from './construct';
export { decode } from './decode';
export { createMetadata, getRegistryBase } from './metadata';
export { defineMethod, toTxMethod } from './method';
export * from './util';
export { getSpecTypes } from '@polkadot/types-known';
/**
 * Functions for each step of the transaction construction process.
 */
export declare const construct: {
    signedTx: typeof signedTx;
    signingPayload: typeof signingPayload;
    signingPayloadToU8a: typeof signingPayloadToU8a;
    encodeUnsignedTransaction: typeof encodeUnsignedTransaction;
    txHash: typeof txHash;
};
